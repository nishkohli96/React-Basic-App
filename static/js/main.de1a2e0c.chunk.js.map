{"version":3,"sources":["serviceWorker.js","casl/Can.js","pages/CaslEg.js","pages/FormPage.js","components/Drawer.js","components/NavbarTop.js","components/GridLayout.js","pages/Dashboard.js","styled-components/StyledComponents.js","styled-components/ThemeButton.js","styled-components/ThemedComponents.js","themes/dark.js","themes/light.js","context/AppThemeContext.js","pages/ThemeCompsPage.js","components/LangChange.js","pages/Homescreen.js","components/Textfield.js","components/Container.js","components/FullWidthGrid.js","components/CustomExpPanel.js","components/AlertDialog.js","components/DataDialog.js","components/Chips.js","components/NestedList.js","components/FolderList.js","components/TableOptions.js","components/NavTabs.js","pages/UIComponents.js","pages/ReactHookForm.js","hooks/useQueryFetch.js","components/PersonProfile.js","pages/PeopleProfile.js","graphql/queries.js","pages/StyledCompsPage.js","components/Carousel.js","components/PageNotFound.js","redux/reducers/counter.js","redux/reducers/todolist.js","redux/redux-persist.js","mobx/doubler.store.js","mobx/index.js","components/MobXEg.js","components/ReduxCounter.js","App.js","i18-next/i18config.js","casl/Ability.js","index.js"],"names":["Boolean","window","location","hostname","match","AbilityContext","createContext","Can","createContextualCan","Consumer","CaslEg","I","a","style","color","fontWeight","styles","container","display","flexDirection","flex","backgroundColor","justifyContent","alignItems","formHeader","fontSize","marginTop","divRow","divCell","margin","width","height","FormPage","React","useState","radioValue","setRadioValue","TextField","id","label","required","FormControl","component","FormLabel","RadioGroup","row","aria-label","name","value","onChange","event","target","FormControlLabel","control","Radio","useStyles","makeStyles","list","listicon","fullList","drawerPaper","background","menu","marginLeft","marginRight","Drawer","classes","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","type","key","map","Fragment","IconButton","className","onClick","SwipeableDrawer","onClose","onOpen","paper","clsx","role","onKeyDown","List","text","index","ListItem","button","ListItemIcon","ListItemText","primary","Divider","theme","grow","flexGrow","navbgcolor","menuButton","spacing","title","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","NavbarTop","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","renderMobileMenu","Badge","badgeContent","aria-controls","aria-haspopup","AppBar","Toolbar","Typography","variant","noWrap","InputBase","placeholder","root","input","onKeyUp","console","log","keyCode","val","document","getElementById","inputProps","edge","textAlign","fabGreen","GreenCheckbox","withStyles","checked","props","Checkbox","GridLayout","checkedA","checkedB","checkedF","checkedG","handleCBChange","Grid","item","xs","md","Paper","elevation","icon","checkedIcon","checkedC","Fab","size","Dashboard","Component","Container","styled","div","Title","h1","Wrapper","section","Button","Input","inputColor","PswdInput","attrs","ThemedButton","main","defaultProps","PageBG","bodybgColor","Text","p","textColor","DIV","divbgColor","DarkTheme","LightTheme","ThemeToggleContext","AppThemeContext","children","appTheme","localStorage","getItem","setItem","currentTheme","setTheme","Theme","Provider","changeTheme","newTheme","btntheme","ThemeCompsPage","useContext","LangChange","useTranslation","t","i18n","framework","changeLanguage","to","pathname","BootstrapButton","textTransform","borderColor","fontFamily","join","boxShadow","Reactbtns","history","useHistory","endIcon","fetchData","startIcon","sendData","disableRipple","activateLasers","push","data","msg","href","fetch","method","then","res","json","result","error","headers","Accept","body","JSON","stringify","username","password","Homescreen","Suspense","fallback","CustomSwitch","switchBase","track","Switch","handleChange","TextFieldsFunction","noValidate","autoComplete","defaultValue","InputProps","readOnly","helperText","Textfield","FixedContainer","CssBaseline","fixed","FullWidthGrid","sm","ExpansionPanel","border","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","marginBottom","minHeight","content","MuiExpansionPanelSummary","ExpansionPanelDetails","MuiExpansionPanelDetails","CustomExpPanel","setExpanded","panel","newExpanded","square","AlertDialog","setOpen","handleClose","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","options","ConfirmationDialogRaw","valueProp","other","setValue","radioGroupRef","useRef","useEffect","disableBackdropClick","disableEscapeKeyDown","maxWidth","onEntering","current","focus","dividers","ref","option","maxHeight","DataDialog","divider","disabled","secondary","newValue","flexWrap","listStyle","chip","Chips","chipData","setChipData","chipToDelete","Chip","onDelete","undefined","chips","filter","colorchip","nested","NestedList","subheader","ListSubheader","Collapse","in","timeout","unmountOnExit","disablePadding","listItem","FolderList","ListItemAvatar","Avatar","Tooltip","placement","arrow","light","createData","calories","fat","carbs","protein","rows","descendingComparator","b","orderBy","headCells","numeric","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","indeterminate","headCell","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","paddingRight","highlight","lighten","dark","EnhancedTableToolbar","table","minWidth","clip","overflow","TableOptions","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","TableContainer","Table","newSelecteds","n","TableBody","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","slice","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","TabPanel","hidden","Box","a11yProps","NavTabs","Tabs","Tab","wrapped","UIComponents","paddingTop","formField","textField","ReactHookForm","useForm","register","handleSubmit","errors","onSubmit","inputRef","message","pattern","personName","email","minLength","maxLength","phoneno","process","REACT_APP_SPACE_ID","REACT_APP_CONTENT_API","graphiqlURL","useQueryFetch","querystr","peopleData","setPeopleData","setErrors","Authorization","query","profile","leftDiv","rightDiv","avatar","large","PersonProfile","Person","setAvatarURL","imageUrl","url","setPersonName","setDoB","dob","setPhoneNo","avatarURL","showPassword","setShowPassword","alt","src","multiline","rowsMax","utils","DateFnsUtils","format","date","KeyboardButtonProps","endAdornment","InputAdornment","onMouseDown","Personobj","Date","header","listDiv","li","cursor","PeopleProfile","person","setPersonData","personCollection","items","sys","getPeopleList","TomatoButton","ReversedButton","split","reverse","NewPageBG","StyledCompsPage","as","Carousel","hideArrows","autoplay","mobile","interval","media","mediaBackgroundStyle","red","subtitle","blue","green","PageNotFound","returnCounter","counter","action","todoList","newItem","completed","rootReducer","combineReducers","persistConfig","storage","storageSession","persistedReducer","persistReducer","store","createStore","persistor","persistStore","Doubler","counterValue","existingStore","get","this","makeObservable","observable","double","computed","increment","doubleNum","set","doubler","observer","rootStore","ReduxCounter","inputVal","getState","todoItems","setItemList","setFilter","itemID","setitemID","subscribe","ToDoItem","dispatch","underlineText","FilterItem","filterName","RenderList","ItemList","node","App","exact","path","i18next","init","interpolation","escapeValue","lng","resources","en","common_en","fr","common_fr","get18config","ability","Ability","subjectName","__type","update","AbilityBuilder","can","rules","defineUserRules","ReactApp","StrictMode","loading","I18nextProvider","geti18config","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.de1a2e0c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import { createContext } from 'react';\nimport { createContextualCan } from '@casl/react';\n\nexport const AbilityContext = createContext();\nconst Can = createContextualCan(AbilityContext.Consumer);\n\nexport default Can;\n","import React from 'react';\nimport Can from '../casl/Can';\n\nconst CaslEg = () => {\n    /*  Based upon the value of the variable \"ability\" defined in Ability.js, you \n        can see the content of this page */\n    return (\n        <>\n            <Can I=\"view\" a=\"Dashboard\">\n                <p> Yes, I can view Dashboard page</p>\n            </Can>\n            <Can I=\"view\" a=\"Introduction\">\n                <p> Yes, I can view Introduction page</p>\n            </Can>\n            <Can I=\"drink\" a=\"coffee\">\n                <p> Yes, I can drink coffee</p>\n            </Can>\n            <Can I=\"drink\" a=\"tea\">\n                <p> Yes, I can drink tea</p>\n            </Can>\n            <p style={{ color: 'red', fontWeight: '400' }}>\n                Based upon the value of variable &apos;ability&apos; defined in\n                Ability.js, you can see the content of this page.\n            </p>\n        </>\n    );\n};\n\nexport default CaslEg;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n// import { withStyles, makeStyle } from '@material-ui/core';\n\nconst FormPage = () => {\n    const [radioValue, setRadioValue] = React.useState('');\n\n    const handleChange = (event) => {\n        setRadioValue(event.target.value);\n    };\n\n    return (\n        <div style={styles.container}>\n            <div style={styles.formHeader}> Form </div>\n            <div style={styles.divRow}>\n                <div style={{ ...styles.divCell, justifyContent: 'center' }}>\n                    <TextField id=\"standard-basic\" label=\"Name\" required />\n                </div>\n                <div style={styles.divCell}>\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Gender</FormLabel>\n                        <RadioGroup\n                            row\n                            aria-label=\"gender\"\n                            name=\"gender1\"\n                            value={radioValue}\n                            onChange={handleChange}\n                        >\n                            <FormControlLabel\n                                value=\"female\"\n                                control={<Radio />}\n                                label=\"Female\"\n                            />\n                            <FormControlLabel\n                                value=\"male\"\n                                control={<Radio />}\n                                label=\"Male\"\n                            />\n                            <FormControlLabel\n                                value=\"other\"\n                                control={<Radio />}\n                                label=\"Other\"\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst styles = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n        backgroundColor: 'skyblue',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    formHeader: {\n        fontSize: 40,\n        color: 'purple',\n        marginTop: 10,\n    },\n    divRow: {\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'row',\n        backgroundColor: 'yellow',\n        justifyContent: 'space-between',\n    },\n    divCell: {\n        display: 'flex',\n        flex: 0.5,\n        backgroundColor: 'pink',\n        margin: 10,\n        width: '40vw',\n        height: '10vh',\n    },\n};\nexport default FormPage;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n        color: '#FFFFFF',\n    },\n    listicon: {\n        color: '#FFFFFF',\n    },\n    fullList: {\n        width: 'auto',\n    },\n    drawerPaper: {\n        background: '#2E3B55',\n    },\n    menu: {\n        color: '#FFFFFF',\n        marginLeft: '-10px',\n        marginRight: '20px',\n    },\n});\n/* Swipeable Drawer */\nexport default function Drawer() {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n    });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (\n            event &&\n            event.type === 'keydown' &&\n            (event.key === 'Tab' || event.key === 'Shift')\n        ) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n\n    const list = (anchor) => (\n        <div\n            className={clsx(classes.list, {\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n            })}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List>\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map(\n                    (text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon className={classes.listicon}>\n                                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                            </ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    )\n                )}\n            </List>\n            <Divider />\n            <List>\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemIcon className={classes.listicon}>\n                            {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <div>\n            {['left'].map((anchor) => (\n                <React.Fragment key={anchor}>\n                    <IconButton\n                        className={classes.menu}\n                        onClick={toggleDrawer(anchor, true)}\n                    >\n                        {' '}\n                        <MenuIcon />{' '}\n                    </IconButton>\n                    <SwipeableDrawer\n                        anchor={anchor}\n                        open={state[anchor]}\n                        onClose={toggleDrawer(anchor, false)}\n                        onOpen={toggleDrawer(anchor, true)}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                    >\n                        {list(anchor)}\n                    </SwipeableDrawer>\n                </React.Fragment>\n            ))}\n        </div>\n    );\n}\n","import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\n/* Import Drawer Component */\nimport Drawer from './Drawer';\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    navbgcolor: {\n        backgroundColor: '#2E3B55',\n    },\n    menuButton: {\n        marginLeft: theme.spacing(1),\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nexport default function NavbarTop() {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n    /* Get the value typed in the input field */\n    function handleInput(event) {\n        console.log('event : ', event.keyCode);\n        const val = document.getElementById('searchInput').value;\n        console.log(val);\n    }\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                    <Badge badgeContent={4} color=\"secondary\">\n                        <MailIcon />\n                    </Badge>\n                </IconButton>\n                <p>Messages</p>\n            </MenuItem>\n            <MenuItem>\n                <IconButton\n                    aria-label=\"show 11 new notifications\"\n                    color=\"inherit\"\n                >\n                    <Badge badgeContent={11} color=\"secondary\">\n                        <NotificationsIcon />\n                    </Badge>\n                </IconButton>\n                <p>Notifications</p>\n            </MenuItem>\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\" className={classes.navbgcolor}>\n                <Toolbar>\n                    <Drawer className={classes.menuButton} />\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        Material-UI\n                    </Typography>\n\n                    <div className={classes.grow} />\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            id=\"searchInput\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            onKeyUp={handleInput}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                    <div className={classes.sectionDesktop}>\n                        <IconButton\n                            aria-label=\"show 4 new mails\"\n                            color=\"inherit\"\n                        >\n                            <Badge badgeContent={4} color=\"secondary\">\n                                <MailIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            aria-label=\"show 17 new notifications\"\n                            color=\"inherit\"\n                        >\n                            <Badge badgeContent={17} color=\"secondary\">\n                                <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\n// Export some other Components from files in the components folder\n// import DatePicker from './DatePicker'; // some err in the module\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        margin: theme.spacing(0.5),\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'blue',\n        // backgroundColor:'lightgreen'\n    },\n    fabGreen: {\n        color: 'blue',\n        backgroundColor: 'orange',\n        '&:hover': {\n            backgroundColor: 'teal',\n        },\n    },\n}));\nconst GreenCheckbox = withStyles({\n    root: {\n        color: 'pink', //when cb is unchecked\n        '&$checked': {\n            color: 'blue', // when cb checked\n        },\n    },\n    checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nexport default function GridLayout() {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: false,\n        checkedF: true,\n        checkedG: true,\n    });\n\n    const handleCBChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n    const fabClicked = (event) => {\n        console.log('fab btn clicked');\n    };\n\n    return (\n        <div>\n            Inside form body\n            <div className={classes.root}>\n                <Grid container>\n                    <Grid item xs={12} md={4}>\n                        <Paper elevation={5} className={classes.paper}>\n                            <FormControlLabel\n                                checked={state.checkedB}\n                                control={\n                                    <Checkbox\n                                        checked={state.checkedB}\n                                        onChange={handleCBChange}\n                                        name=\"checkedB\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Primary\"\n                            />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <Paper className={classes.paper}>\n                            <FormControlLabel\n                                checked={state.checkedA}\n                                control={\n                                    <Checkbox\n                                        icon={<Favorite />}\n                                        checkedIcon={<Favorite />}\n                                        name=\"checkedA\"\n                                        onChange={handleCBChange}\n                                    />\n                                }\n                                label=\"Custom icon\"\n                            />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <Paper className={classes.paper}>\n                            <FormControlLabel\n                                control={\n                                    <GreenCheckbox\n                                        checked={state.checkedC}\n                                        onChange={handleCBChange}\n                                        name=\"checkedC\"\n                                    />\n                                }\n                                label=\"Custom color\"\n                            />\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n            <Fab\n                className={classes.fabGreen}\n                onClick={fabClicked}\n                size=\"small\"\n                aria-label=\"add\"\n            >\n                {' '}\n                <AddIcon />{' '}\n            </Fab>\n            {/* <DatePicker /> */}\n        </div>\n    );\n}\n","import React from 'react';\nimport NavbarTop from '../components/NavbarTop';\nimport GridLayout from '../components/GridLayout';\n\nclass Dashboard extends React.Component {\n    render() {\n        return (\n            <div>\n                <NavbarTop />\n                <GridLayout />\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\n/* Refer\n    https://styled-components.com/docs/basics#installation\n*/\n\n/* Creating and exporting pre-styled HTML components */\nexport const Container = styled.div`\n    background-color: skyblue;\n    padding: 20px;\n`;\n\nexport const Title = styled.h1`\n    font-size: 1.5em;\n    text-align: center;\n    color: palevioletred;\n`;\n\n/* Create a Wrapper component that'll render a <section> tag with some styles */\nexport const Wrapper = styled.section`\n    padding: 4em;\n    background: papayawhip;\n`;\n\n/* Adapt the colors based on primary prop */\nexport const Button = styled.button`\n    background: ${(props) => (props.primary ? 'palevioletred' : 'white')};\n    color: ${(props) => (props.primary ? 'white' : 'palevioletred')};\n\n    font-size: 1em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border: 2px solid palevioletred;\n    border-radius: 3px;\n`;\n\nexport const Input = styled.input`\n    padding: 0.5em;\n    margin: 0.5em;\n    color: ${(props) => props.inputColor || 'palevioletred'};\n    background: lightgreen;\n    border: none;\n    font-weight: bold;\n    border-radius: 3px;\n`;\n\nexport const PswdInput = styled.input.attrs((props) => ({\n    // we can define static props\n    type: 'password',\n    // or we can define dynamic ones\n    size: props.size || '1em',\n}))`\n    color: palevioletred;\n    font-size: 1em;\n    border: 2px solid blue;\n    border-radius: 3px;\n\n    /* here we use the dynamically computed prop */\n    margin: ${(props) => props.size};\n    padding: ${(props) => props.size};\n`;\n","import styled from 'styled-components';\n\n/* Refer\n    https://styled-components.com/docs/advanced\n*/\n\n/* Define our button, but with the use of props.theme this time */\n/* Color the border and text with theme.main */\n\nconst ThemedButton = styled.button`\n    font-size: 1em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border-radius: 3px;\n    color: ${(props) => props.theme.main};\n    border: 2px solid ${(props) => props.theme.main};\n`;\n\nThemedButton.defaultProps = {\n    theme: {\n        main: 'palevioletred',\n    },\n};\n\nexport default ThemedButton;\n","import styled from 'styled-components';\n\nexport const PageBG = styled.div`\n    background-color: ${(props) => props.theme.bodybgColor};\n    padding: 20px;\n`;\n\nexport const Text = styled.p`\n    font-size: 20px;\n    color: ${(props) => props.theme.textColor};\n`;\n\nexport const DIV = styled.div`\n    background-color: ${(props) => props.theme.divbgColor};\n    padding: 20px;\n    text-align: centre;\n`;\n","export const DarkTheme = {\n    bodybgColor: '#000000',\n    textColor: '#ffffff',\n    divbgColor: 'darkgreen',\n};\n","export const LightTheme = {\n    bodybgColor: '#ffffff',\n    textColor: '#000000',\n    divbgColor: 'lightgreen',\n};\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport { DarkTheme } from '../themes/dark';\nimport { LightTheme } from '../themes/light';\n\nexport const ThemeToggleContext = React.createContext();\n\nexport const AppThemeContext = ({ children }) => {\n    /* Set theme as a localStorage item to prevent loosing them on page refresh */\n    let appTheme = localStorage.getItem('theme');\n    if (!appTheme) {\n        appTheme = 'light';\n        localStorage.setItem('theme', appTheme);\n    }\n\n    const [currentTheme, setTheme] = React.useState(appTheme);\n\n    const themeToggle = (newTheme) => {\n        localStorage.setItem('theme', newTheme);\n        setTheme(newTheme);\n    };\n\n    const Theme = ({ children }) => {\n        return (\n            <ThemeProvider\n                theme={currentTheme === 'light' ? LightTheme : DarkTheme}\n            >\n                {children}\n            </ThemeProvider>\n        );\n    };\n\n    return (\n        <ThemeToggleContext.Provider\n            value={{ theme: currentTheme, changeTheme: themeToggle }}\n        >\n            <Theme>{children}</Theme>\n        </ThemeToggleContext.Provider>\n    );\n};\n\n// export default AppThemeContext;\n","import React, { useContext } from 'react';\n\nimport { Button, Title } from '../styled-components/StyledComponents';\nimport ThemedButton from '../styled-components/ThemeButton';\nimport { PageBG, Text, DIV } from '../styled-components/ThemedComponents';\nimport { ThemeToggleContext } from '../context/AppThemeContext';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\n\n/* We are passing a default theme for Buttons that arent wrapped in the ThemeProvider */\nconst btntheme = {\n    main: 'mediumseagreen',\n};\n\n/* The app Theme changes through React Context; code in the context folder */\n\nconst ThemeCompsPage = () => {\n    const { theme, changeTheme } = useContext(ThemeToggleContext);\n    const changeAppTheme = () => {\n        changeTheme(theme === 'light' ? 'dark' : 'light');\n    };\n\n    return (\n        <PageBG>\n            <DIV>\n                <Title> Themed Components </Title>\n                <Text> Click on the Below Btn to switch Themes </Text>\n                <InvertColorsIcon\n                    style={{ color: 'blue' }}\n                    onClick={changeAppTheme}\n                />\n                <Button>Normal</Button>\n                <ThemedButton theme={btntheme}>Themed</ThemedButton>\n            </DIV>\n        </PageBG>\n    );\n};\n\nexport default ThemeCompsPage;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\n\nconst LangChange = () => {\n    const [t, i18n] = useTranslation('common');\n    return (\n        <>\n            <h1>{t('messages.hello')}</h1>\n            <h4>{t('welcomeText', { framework: 'React' })}</h4>\n            <button onClick={() => i18n.changeLanguage('en')}>\n                Change Lang to EN\n            </button>\n            <button onClick={() => i18n.changeLanguage('fr')}>\n                Change Lang to FR\n            </button>\n            <Link to={{ pathname: '/form' }}> GO to Form </Link>\n        </>\n    );\n};\n\nexport default LangChange;\n","import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { useHistory } from 'react-router-dom';\n\nimport ThemeCompsPage from './ThemeCompsPage';\nimport LangChange from '../components/LangChange';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\nconst BootstrapButton = withStyles({\n    root: {\n        fontSize: 16,\n        textTransform: 'none', // else it wud caps all the text\n        borderColor: '#007ABA',\n        fontFamily: ['\"Helvetica Neue\"'].join(','),\n        '&:hover': {\n            backgroundColor: '#0069d9',\n            borderColor: 'red',\n            boxShadow: 'none',\n        },\n        '&:active': {\n            boxShadow: 'none',\n            backgroundColor: '#0062cc',\n            borderColor: '#005cbf',\n        },\n        '&:focus': {\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n        },\n    },\n    button: {\n        backgroundColor: 'orange',\n        color: '#007aba',\n    },\n})(Button);\n\nfunction Reactbtns() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    return (\n        <div className={classes.root}>\n            <Button\n                style={{ backgroundColor: '#21b6ae', color: 'yellow' }}\n                className={classes.button}\n                endIcon={<CloudUploadIcon />}\n                onClick={fetchData}\n            >\n                Fetch data\n            </Button>\n            <br />\n            <Button\n                variant=\"outlined\"\n                style={{ color: '#21b6ae' }}\n                className={classes.button}\n                startIcon={<SaveIcon />}\n                onClick={sendData}\n            >\n                Login\n            </Button>\n            <BootstrapButton\n                variant=\"contained\"\n                color=\"primary\"\n                disableRipple\n                onClick={activateLasers}\n            >\n                View UI\n            </BootstrapButton>\n\n            <BootstrapButton\n                variant=\"outlined\"\n                color=\"primary\"\n                disableRipple\n                onClick={() => history.push('/styled')}\n            >\n                GoTo Styled Components\n            </BootstrapButton>\n\n            <Link\n                to={{\n                    pathname: '/ui',\n                    data: { name: 'nish', msg: 'Hi people' },\n                }}\n            >\n                Send data to route\n            </Link>\n\n            <Link\n                to={{\n                    pathname: '/rhform',\n                }}\n            >\n                Go to react-hook form\n            </Link>\n\n            <Link\n                to={{\n                    pathname: '/dashboard',\n                }}\n            >\n                Go to dashboard\n            </Link>\n            <Link\n                to={{\n                    pathname: '/redux',\n                }}\n            >\n                Redux &amp; MobX\n            </Link>\n            <Link\n                to={{\n                    pathname: '/people',\n                }}\n            >\n                Check Graphql fetch\n            </Link>\n            <Link\n                to={{\n                    pathname: '/casl',\n                }}\n            >\n                Casl Example\n            </Link>\n\n            <Link to=\"/carousel\">Carousel</Link>\n        </div>\n    );\n}\n\nfunction activateLasers() {\n    window.location.href = '/ui';\n}\n\n/* Run node server */\nfunction fetchData() {\n    fetch('http://localhost:4000/items', {\n        method: 'GET',\n    })\n        .then((res) => res.json())\n        .then(\n            (result) => {\n                console.log(result);\n            },\n            (error) => {\n                console.log(error);\n            }\n        );\n}\n\nfunction sendData() {\n    const data = {\n        username: 'nk@qw.qw',\n        password: 'nish134',\n    };\n\n    fetch('http://localhost:4000/data', {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    })\n        .then((res) => res.json())\n        .then(\n            (result) => {\n                console.log(result);\n            },\n            (error) => {\n                console.log(error);\n            }\n        );\n}\n\nclass Homescreen extends React.Component {\n    render() {\n        return (\n            <>\n                <React.Suspense fallback=\"loading translations.....\">\n                    <LangChange />\n                </React.Suspense>\n                <ThemeCompsPage />\n                <Reactbtns />\n            </>\n        );\n    }\n}\n\nexport default Homescreen;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n}));\n\nconst CustomSwitch = withStyles({\n    switchBase: {\n        color: 'yellow',\n        '&$checked': {\n            color: 'red',\n        },\n        '&$checked + $track': {\n            backgroundColor: '#006699',\n        },\n    },\n    checked: {},\n    track: {},\n})(Switch);\n\nconst handleChange = (event) => {\n    if (event.target.checked) {\n        document.getElementById('standard-required').value =\n            'Switch Toggled On';\n    } else {\n        document.getElementById('standard-required').value = 'Toggled Off';\n    }\n};\n\nfunction TextFieldsFunction() {\n    const classes = useStyles();\n    return (\n        <form className={classes.root} noValidate autoComplete=\"off\">\n            <div>\n                <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Required\"\n                    defaultValue=\"Hello World\"\n                />\n                <TextField\n                    id=\"standard-password-input\"\n                    label=\"Password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                />\n                <TextField\n                    id=\"standard-read-only-input\"\n                    label=\"Read Only\"\n                    defaultValue=\"Hello World\"\n                    InputProps={{ readOnly: true }}\n                />\n                <TextField\n                    error\n                    id=\"standard-error-helper-text\"\n                    label=\"Error\"\n                    defaultValue=\"Hello World\"\n                    helperText=\"Incorrect entry.\"\n                />\n                <FormControlLabel\n                    control={\n                        <Switch\n                            onChange={handleChange}\n                            name=\"checkedB\"\n                            color=\"primary\"\n                        />\n                    }\n                    label=\"Change value of reqd field\"\n                />{' '}\n                <br />\n                <FormControlLabel\n                    control={\n                        <CustomSwitch onChange={handleChange} name=\"checkedC\" />\n                    }\n                    label=\"Change value of reqd field\"\n                />\n            </div>\n        </form>\n    );\n}\n\nclass Textfield extends React.Component {\n    render() {\n        return <TextFieldsFunction />;\n    }\n}\n\nexport default Textfield;\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nexport default function FixedContainer() {\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Container fixed>\n                <Typography\n                    component=\"div\"\n                    style={{ backgroundColor: '#cfe8fc', height: '100px' }}\n                >\n                    Inside Container\n                    <div style={{ backgroundColor: 'pink', color: '#FFFFFF' }}>\n                        Inside the pink Container\n                    </div>\n                </Typography>\n            </Container>\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        margin: theme.spacing(0.5),\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'blue',\n        backgroundColor: 'lightgreen',\n    },\n}));\n\nexport default function FullWidthGrid() {\n    const classes = useStyles();\n    /* Spacing = 3 Means, spacing between 2 row elements is 8px * 3 = 24px */\n    return (\n        <div className={classes.root}>\n            <Grid container>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}>xs=12</Paper>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Paper className={classes.paper}>xs=12 sm=6</Paper>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Paper className={classes.paper}>xs=12 sm=6</Paper>\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <Paper className={classes.paper}>xs=6 sm=3</Paper>\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <Paper className={classes.paper}>xs=6 sm=3</Paper>\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <Paper className={classes.paper}>xs=6 sm=3</Paper>\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <Paper className={classes.paper}>xs=6 sm=3</Paper>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\n\nconst ExpansionPanel = withStyles({\n    root: {\n        border: '1px solid rgba(0, 0, 0, .125)',\n        backgroundColor: 'lightgreen',\n        boxShadow: 'none',\n        '&:not(:last-child)': {\n            borderBottom: 0,\n        },\n        '&:before': {\n            display: 'none',\n        },\n        '&$expanded': {\n            margin: 'auto',\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        backgroundColor: 'skyblue',\n        borderBottom: '1px solid orange',\n        marginBottom: -1,\n        minHeight: 56,\n        '&$expanded': {\n            minHeight: 56,\n        },\n    },\n    content: {\n        '&$expanded': {\n            margin: '12px 0',\n        },\n    },\n    expanded: {\n        backgroundColor: '#007ABA',\n    },\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiExpansionPanelDetails);\n\nexport default function CustomExpPanel() {\n    const [expanded, setExpanded] = React.useState('panel1');\n\n    const handleChange = (panel) => (event, newExpanded) => {\n        setExpanded(newExpanded ? panel : false);\n    };\n\n    return (\n        <div>\n            <ExpansionPanel\n                square\n                expanded={expanded === 'panel1'}\n                onChange={handleChange('panel1')}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <Typography>Collapsible Group Item #1</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Typography>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Suspendisse malesuada lacus ex, sit amet blandit leo\n                        lobortis eget. Lorem ipsum dolor sit amet, consectetur\n                        adipiscing elit. Suspendisse malesuada lacus ex, sit\n                        amet blandit leo lobortis eget.\n                    </Typography>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel\n                square\n                expanded={expanded === 'panel2'}\n                onChange={handleChange('panel2')}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel2d-content\"\n                    id=\"panel2d-header\"\n                >\n                    <Typography>Collapsible Group Item #2</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Typography>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Suspendisse malesuada lacus ex, sit amet blandit leo\n                        lobortis eget. Lorem ipsum dolor sit amet, consectetur\n                        adipiscing elit. Suspendisse malesuada lacus ex, sit\n                        amet blandit leo lobortis eget.\n                    </Typography>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel\n                square\n                expanded={expanded === 'panel3'}\n                onChange={handleChange('panel3')}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel3d-content\"\n                    id=\"panel3d-header\"\n                >\n                    <Typography>Collapsible Group Item #3</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Typography>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Suspendisse malesuada lacus ex, sit amet blandit leo\n                        lobortis eget. Lorem ipsum dolor sit amet, consectetur\n                        adipiscing elit. Suspendisse malesuada lacus ex, sit\n                        amet blandit leo lobortis eget.\n                    </Typography>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </div>\n    );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function AlertDialog() {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleClickOpen}\n            >\n                Open alert dialog\n            </Button>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {\"Use Google's location service?\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Let Google help apps determine location. This means\n                        sending anonymous location data to Google, even when no\n                        apps are running.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Disagree\n                    </Button>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Agree\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst options = [\n    'None',\n    'Atria',\n    'Callisto',\n    'Dione',\n    'Ganymede',\n    'Hangouts Call',\n    'Luna',\n    'Oberon',\n    'Phobos',\n    'Pyxis',\n    'Sedna',\n    'Titania',\n    'Triton',\n    'Umbriel',\n];\n\nfunction ConfirmationDialogRaw(props) {\n    const { onClose, value: valueProp, open, ...other } = props;\n    const [value, setValue] = React.useState(valueProp);\n    const radioGroupRef = React.useRef(null);\n\n    React.useEffect(() => {\n        if (!open) {\n            setValue(valueProp);\n        }\n    }, [valueProp, open]);\n\n    const handleEntering = () => {\n        if (radioGroupRef.current != null) {\n            radioGroupRef.current.focus();\n        }\n    };\n\n    const handleCancel = () => {\n        onClose();\n    };\n\n    const handleOk = () => {\n        onClose(value);\n    };\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n    };\n\n    return (\n        <Dialog\n            disableBackdropClick\n            disableEscapeKeyDown\n            maxWidth=\"xs\"\n            onEntering={handleEntering}\n            aria-labelledby=\"confirmation-dialog-title\"\n            open={open}\n            {...other}\n        >\n            <DialogTitle id=\"confirmation-dialog-title\">\n                Phone Ringtone\n            </DialogTitle>\n            <DialogContent dividers>\n                <RadioGroup\n                    ref={radioGroupRef}\n                    aria-label=\"ringtone\"\n                    name=\"ringtone\"\n                    value={value}\n                    onChange={handleChange}\n                >\n                    {options.map((option) => (\n                        <FormControlLabel\n                            value={option}\n                            key={option}\n                            control={<Radio />}\n                            label={option}\n                        />\n                    ))}\n                </RadioGroup>\n            </DialogContent>\n            <DialogActions>\n                <Button autoFocus onClick={handleCancel} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={handleOk} color=\"primary\">\n                    Ok\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nConfirmationDialogRaw.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    value: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    paper: {\n        width: '80%',\n        maxHeight: 435,\n    },\n}));\n\nexport default function DataDialog() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [value, setValue] = React.useState('Dione');\n\n    const handleClickListItem = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (newValue) => {\n        setOpen(false);\n\n        if (newValue) {\n            setValue(newValue);\n        }\n    };\n\n    return (\n        <div className={classes.root}>\n            <List component=\"div\" role=\"list\">\n                <ListItem button divider disabled role=\"listitem\">\n                    <ListItemText primary=\"Interruptions\" />\n                </ListItem>\n                <ListItem\n                    button\n                    divider\n                    aria-haspopup=\"true\"\n                    aria-controls=\"ringtone-menu\"\n                    aria-label=\"phone ringtone\"\n                    onClick={handleClickListItem}\n                    role=\"listitem\"\n                >\n                    <ListItemText primary=\"Phone ringtone\" secondary={value} />\n                </ListItem>\n                <ListItem button divider disabled role=\"listitem\">\n                    <ListItemText\n                        primary=\"Default notification ringtone\"\n                        secondary=\"Tethys\"\n                    />\n                </ListItem>\n                <ConfirmationDialogRaw\n                    classes={{\n                        paper: classes.paper,\n                    }}\n                    id=\"ringtone-menu\"\n                    keepMounted\n                    open={open}\n                    onClose={handleClose}\n                    value={value}\n                />\n            </List>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(0.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\nexport default function Chips() {\n    const classes = useStyles();\n    const [chipData, setChipData] = React.useState([\n        { key: 0, label: 'Angular' },\n        { key: 1, label: 'jQuery' },\n        { key: 2, label: 'Polymer' },\n        { key: 3, label: 'React' },\n        { key: 4, label: 'Vue.js' },\n    ]);\n\n    const colorChips = ['red', 'skyblue', 'green', 'orange', 'yellow'];\n\n    const handleDelete = (chipToDelete) => () => {\n        setChipData((chips) =>\n            chips.filter((chip) => chip.key !== chipToDelete.key)\n        );\n    };\n\n    return (\n        <Paper component=\"ul\" className={classes.root}>\n            {chipData.map((data) => {\n                let icon;\n\n                if (data.label === 'React') {\n                    icon = <TagFacesIcon />;\n                }\n\n                return (\n                    <li key={data.key}>\n                        <Chip\n                            icon={icon}\n                            label={data.label}\n                            onDelete={\n                                data.label === 'React'\n                                    ? undefined\n                                    : handleDelete(data)\n                            }\n                            className={classes.chip}\n                        />\n                    </li>\n                );\n            })}\n            {/* practice example in chips */} <br />\n            {colorChips.map((colorchip) => {\n                return (\n                    <li key={colorchip}>\n                        <Chip\n                            label={colorchip}\n                            className={classes.chip}\n                            style={{ backgroundColor: colorchip }}\n                        />\n                    </li>\n                );\n            })}\n        </Paper>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: '#4c4c4c',\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}));\n\nexport default function NestedList() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n\n    const handleClick = () => {\n        setOpen(!open);\n    };\n\n    return (\n        <List\n            component=\"nav\"\n            aria-labelledby=\"nested-list-subheader\"\n            subheader={\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                    Nested List Items\n                </ListSubheader>\n            }\n            className={classes.root}\n        >\n            <ListItem button>\n                <ListItemIcon>\n                    <SendIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Sent mail\" />\n            </ListItem>\n            <ListItem button>\n                <ListItemIcon>\n                    <DraftsIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Drafts\" />\n            </ListItem>\n            <ListItem button onClick={handleClick}>\n                <ListItemIcon>\n                    <InboxIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Inbox\" />\n                {open ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button className={classes.nested}>\n                        <ListItemIcon>\n                            <StarBorder />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Starred\" />\n                    </ListItem>\n                </List>\n            </Collapse>\n        </List>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nimport Divider from '@material-ui/core/Divider';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    listItem: {\n        backgroundColor: 'skyblue',\n        color: 'purple',\n    },\n}));\n\nexport default function FolderList() {\n    const classes = useStyles();\n\n    return (\n        <List className={classes.root}>\n            <ListItem className={classes.listItem}>\n                <ListItemAvatar>\n                    <Avatar>\n                        <ImageIcon />\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary=\"Photos\" secondary=\"Jan 9, 2014\" />\n            </ListItem>\n            <Divider />\n\n            <Tooltip title=\"Work baby\" placement=\"right-start\" arrow>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <WorkIcon style={{ color: 'lightgreen' }} />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Work\" secondary=\"Jan 7, 2014\" />\n                </ListItem>\n            </Tooltip>\n\n            <Divider light />\n            <ListItem>\n                <ListItemText primary=\"Vacation\" secondary=\"July 20, 2014\" />\n                <ListItemAvatar>\n                    <Avatar>\n                        <BeachAccessIcon />\n                    </Avatar>\n                </ListItemAvatar>\n            </ListItem>\n        </List>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nfunction createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Donut', 452, 25.0, 51, 4.9),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n    createData('Honeycomb', 408, 3.2, 87, 6.5),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Jelly Bean', 375, 0.0, 94, 0.0),\n    createData('KitKat', 518, 26.0, 65, 7.0),\n    createData('Lollipop', 392, 0.2, 98, 0.0),\n    createData('Marshmallow', 318, 0, 81, 2.0),\n    createData('Nougat', 360, 19.0, 9, 37.0),\n    createData('Oreo', 437, 18.0, 63, 4.0),\n];\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    {\n        id: 'name',\n        numeric: false,\n        disablePadding: true,\n        label: 'Dessert (100g serving)',\n    },\n    { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n    { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n    { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n    {\n        id: 'protein',\n        numeric: true,\n        disablePadding: false,\n        label: 'Protein (g)',\n    },\n];\n\nfunction EnhancedTableHead(props) {\n    const {\n        classes,\n        onSelectAllClick,\n        order,\n        orderBy,\n        numSelected,\n        rowCount,\n        onRequestSort,\n    } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={\n                            numSelected > 0 && numSelected < rowCount\n                        }\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc'\n                                        ? 'sorted descending'\n                                        : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected } = props;\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography\n                    className={classes.title}\n                    color=\"inherit\"\n                    variant=\"subtitle1\"\n                    component=\"div\"\n                >\n                    {numSelected} selected\n                </Typography>\n            ) : (\n                <Typography\n                    className={classes.title}\n                    variant=\"h6\"\n                    id=\"tableTitle\"\n                    component=\"div\"\n                >\n                    Nutrition\n                </Typography>\n            )}\n\n            {numSelected > 0 ? (\n                <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"delete\">\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            ) : (\n                <Tooltip title=\"Filter list\">\n                    <IconButton aria-label=\"filter list\">\n                        <FilterListIcon />\n                    </IconButton>\n                </Tooltip>\n            )}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function TableOptions() {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('calories');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleChangeDense = (event) => {\n        setDense(event.target.checked);\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows =\n        rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar numSelected={selected.length} />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getComparator(order, orderBy))\n                                .slice(\n                                    page * rowsPerPage,\n                                    page * rowsPerPage + rowsPerPage\n                                )\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row.name);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={(event) =>\n                                                handleClick(event, row.name)\n                                            }\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.name}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    inputProps={{\n                                                        'aria-labelledby': labelId,\n                                                    }}\n                                                />\n                                            </TableCell>\n                                            <TableCell\n                                                component=\"th\"\n                                                id={labelId}\n                                                scope=\"row\"\n                                                padding=\"none\"\n                                            >\n                                                {row.name}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row.calories}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row.fat}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row.carbs}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row.protein}\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow\n                                    style={{\n                                        height: (dense ? 33 : 53) * emptyRows,\n                                    }}\n                                >\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            <FormControlLabel\n                control={\n                    <Switch checked={dense} onChange={handleChangeDense} />\n                }\n                label=\"Dense padding\"\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport PhoneIcon from '@material-ui/icons/Phone';\n\n/* Import Tab Content Components */\nimport Textfield from '../components/Textfield';\nimport Container from '../components/Container';\nimport FullWidthGrid from '../components/FullWidthGrid';\nimport CustomExpPanel from '../components/CustomExpPanel';\nimport AlertDialog from '../components/AlertDialog';\nimport DataDialog from '../components/DataDialog';\nimport Chips from '../components/Chips';\nimport NestedList from '../components/NestedList';\nimport FolderList from '../components/FolderList';\nimport TableOptions from '../components/TableOptions';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function NavTabs() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(1); //the tab index to be selected\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Tabs\n                    value={value}\n                    variant=\"fullWidth\"\n                    onChange={handleChange}\n                    aria-label=\"simple tabs example\"\n                >\n                    <Tab\n                        label=\"TextField\"\n                        icon={<PhoneIcon />}\n                        wrapped\n                        {...a11yProps(0)}\n                    />\n                    <Tab label=\"Container\" {...a11yProps(1)} />\n                    <Tab label=\"Grids\" {...a11yProps(2)} />\n                    <Tab label=\"Disabled Tab\" disabled {...a11yProps(3)} />\n                    <Tab label=\"Tables\" {...a11yProps(4)} />\n                </Tabs>\n            </AppBar>\n\n            <TabPanel value={value} index={0}>\n                <Textfield />\n                <br />\n                <Chips /> <br />\n                <NestedList />\n            </TabPanel>\n\n            <TabPanel value={value} index={1}>\n                <Container /> <br />\n                <CustomExpPanel /> <br />\n                <FolderList />\n            </TabPanel>\n\n            <TabPanel value={value} index={2}>\n                <FullWidthGrid /> <br />\n                <AlertDialog /> <br />\n                <DataDialog />\n            </TabPanel>\n\n            <TabPanel value={value} index={3}>\n                This Table is disabled.\n            </TabPanel>\n\n            <TabPanel value={value} index={4}>\n                <TableOptions />\n            </TabPanel>\n        </div>\n    );\n}\n","import React from 'react';\nimport '../assets/styles/style.css';\nimport NavTabs from '../components/NavTabs';\n\nclass UIComponents extends React.Component {\n    render() {\n        return (\n            <div className=\"header\">\n                <NavTabs />\n            </div>\n        );\n    }\n}\n\nexport default UIComponents;\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n/*  Use this library for validation & error handling in forms\r\n    https://react-hook-form.com/    \r\n*/\r\n\r\nconst ReactHookForm = () => {\r\n    const { register, handleSubmit, errors } = useForm(); // can import watch\r\n    const onSubmit = (data) => console.log(data);\r\n    const classes = useStyles();\r\n    // console.log(watch('personName')); // watch input value by passing the name of it\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div style={styles.formField}>\r\n                    <TextField\r\n                        autoFocus={true} // Focus on this field when component loaded\r\n                        label=\"Name\"\r\n                        name=\"personName\"\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'Please fill this field',\r\n                            },\r\n                            pattern: {\r\n                                value: /^[A-Z a-z]+$/i,\r\n                                message: 'Not a valid pattern',\r\n                            },\r\n                        })}\r\n                        error={errors?.personName ? true : false}\r\n                        helperText={errors?.personName?.message}\r\n                    />\r\n                </div>\r\n\r\n                <div style={styles.formField}>\r\n                    <TextField\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'Please fill this field',\r\n                            },\r\n                        })}\r\n                        error={errors?.email ? true : false}\r\n                        helperText={errors?.email?.message}\r\n                    />\r\n                </div>\r\n\r\n                <div style={styles.formField}>\r\n                    <TextField\r\n                        label=\"Phone Number\"\r\n                        name=\"phoneno\"\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'Please fill this field',\r\n                            },\r\n                            pattern: {\r\n                                value: /^[0-9]+$/i,\r\n                                message: 'Not a valid pattern',\r\n                            },\r\n                            minLength: {\r\n                                value: 9,\r\n                                message: 'Min 9 chars',\r\n                            },\r\n                            maxLength: {\r\n                                value: 15,\r\n                                message: 'Max 15 chars',\r\n                            },\r\n                        })}\r\n                        error={errors?.phoneno ? true : false}\r\n                        helperText={errors?.phoneno?.message}\r\n                    />\r\n                </div>\r\n\r\n                <div style={styles.formField}>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        style={{ color: '#21b6ae' }}\r\n                        type=\"submit\"\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        style={{ color: '#21b6ae' }}\r\n                        type=\"reset\"\r\n                    >\r\n                        Clear Form\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: '20px',\r\n        paddingTop: '50px',\r\n        alignItems: 'center',\r\n    },\r\n    formField: {\r\n        marginBottom: '50px',\r\n    },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textField: {\r\n        width: 400,\r\n        height: 30,\r\n    },\r\n}));\r\n\r\nexport default ReactHookForm;\r\n","import { useState, useEffect } from 'react';\n\nconst { REACT_APP_SPACE_ID, REACT_APP_CONTENT_API } = process.env;\nconst graphiqlURL = `https://graphql.contentful.com/content/v1/spaces/${REACT_APP_SPACE_ID}`;\n\n/* FYI : always prefix your custom Hook name with the 'use' keyword; else React would \n   not be able to differentiate between a custom Hook and a normal function */\nconst useQueryFetch = (querystr) => {\n    const [peopleData, setPeopleData] = useState(null);\n    const [errors, setErrors] = useState(null);\n\n    useEffect(() => {\n        /* GraphQL queries will either return a 'data' object or an 'errors' object */\n        window\n            .fetch(graphiqlURL, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${REACT_APP_CONTENT_API}`,\n                },\n                body: JSON.stringify({ query: querystr }),\n                /* Apparently, if I passed getAllPersons in stringify, it was throwing err */\n            })\n            .then((res) => res.json())\n            .then(({ data, errors }) =>\n                data ? setPeopleData(data) : setErrors(errors)\n            );\n    }, [querystr]);\n    /* Passing querystr in dependency variables means, that the function will re-call itself\n       when the value of the querystr changes */\n    return { peopleData, errors };\n};\n\nexport default useQueryFetch;\n","import React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { TextField, InputAdornment, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\n/* MUI Date & Time Pickers have some dependency issue with @date-io/date-fns v 2.x\n   So, prefer using v1.3.13 -> yarn add @date-io/date-fns@1.3.13\n*/\n\nconst PersonProfile = ({ Person }) => {\n    /*  Since this a functional component, it needs to update everytime when Person\n        obj value changes */\n    useEffect(() => {\n        setAvatarURL(Person.imageUrl.url);\n        setPersonName(Person.name);\n        setDoB(Person.dob);\n        setPhoneNo(Person.phoneno);\n    }, [Person]);\n\n    const [avatarURL, setAvatarURL] = useState(Person.imageUrl.url);\n    const [personName, setPersonName] = useState(Person.name);\n    const [dob, setDoB] = useState(Person.dob);\n    const [phoneno, setPhoneNo] = useState(Person.phoneno);\n\n    const [showPassword, setShowPassword] = useState(false);\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\n    const handleMouseDownPassword = () => setShowPassword(!showPassword);\n\n    const classes = useStyles();\n\n    return (\n        <div style={styles.container}>\n            <div style={styles.profile}>\n                <div style={styles.leftDiv}>\n                    <Avatar\n                        alt=\"Person Image\"\n                        src={avatarURL}\n                        className={classes.large}\n                        // variant='square'\n                    />\n                </div>\n                <div style={styles.rightDiv}>\n                    <div style={styles.formField}>\n                        <TextField\n                            label=\"Name\"\n                            value={personName}\n                            onChange={(event) =>\n                                setPersonName(event.target.value)\n                            }\n                            variant=\"outlined\"\n                            className={classes.textField}\n                        />\n                    </div>\n\n                    <div style={styles.formField}>\n                        <TextField\n                            id=\"standard-multiline-flexible\"\n                            label=\"Phone Number\"\n                            multiline\n                            rowsMax={4}\n                            value={phoneno}\n                            className={classes.textField}\n                            onChange={(event) => setPhoneNo(event.target.value)}\n                        />\n                    </div>\n\n                    <div style={styles.formField}>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <KeyboardDatePicker\n                                margin=\"normal\"\n                                id=\"date-picker-dialog\"\n                                label=\"Date of Birth\"\n                                format=\"dd/MM/yyyy\"\n                                value={dob}\n                                onChange={(date) => setDoB(date)}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                                className={classes.textField}\n                                readOnly\n                            />\n                        </MuiPickersUtilsProvider>\n                    </div>\n\n                    <div style={styles.formField}>\n                        <TextField\n                            label=\"Enter Password\"\n                            className={classes.textField}\n                            type={showPassword ? 'text' : 'password'}\n                            InputProps={{\n                                // <-- This is where the toggle button is added.\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={\n                                                handleMouseDownPassword\n                                            }\n                                        >\n                                            {showPassword ? (\n                                                <VisibilityIcon />\n                                            ) : (\n                                                <VisibilityOffIcon />\n                                            )}\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst styles = {\n    container: {\n        padding: '20px',\n    },\n    profile: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    leftDiv: {\n        flex: 0.4,\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    rightDiv: {\n        flex: 0.6,\n        display: 'flex',\n        justifyContent: 'flex-start',\n        flexDirection: 'column',\n    },\n    avatar: {\n        width: '200',\n        height: '200',\n    },\n    formField: {\n        marginBottom: '40px',\n    },\n};\n\nconst useStyles = makeStyles((theme) => ({\n    large: {\n        width: theme.spacing(30),\n        height: theme.spacing(30),\n    },\n    textField: {\n        width: 400,\n        height: 40,\n    },\n}));\n\nexport default PersonProfile;\n","import React, { useState } from 'react';\nimport useQueryFetch from '../hooks/useQueryFetch';\nimport { getAllPersons } from '../graphql/queries';\nimport PersonProfile from '../components/PersonProfile';\n\nconst Personobj = {\n    name: '',\n    dob: new Date(),\n    imageUrl: {\n        url: '',\n    },\n    phoneno: '',\n};\n\nconst PeopleProfile = () => {\n    const [person, setPersonData] = useState(Personobj);\n    const { peopleData, errors } = useQueryFetch(getAllPersons);\n    console.log(peopleData);\n\n    const getPeopleList = () => {\n        if (!peopleData) {\n            return <div> Fetching Data... </div>;\n        }\n        if (errors) {\n            return (\n                <div>\n                    <p>Some Error while Fetching Data...</p>\n                    <p>{errors[0]}</p>\n                </div>\n            );\n        }\n        if (peopleData) {\n            const data = peopleData.personCollection.items;\n            console.log(data);\n            return (\n                <div style={styles.listDiv}>\n                    <ul type=\"none\">\n                        {data.map((item) => (\n                            <li\n                                style={styles.li}\n                                key={item.sys.id}\n                                onClick={() => setPersonData(item)}\n                            >\n                                {item.name}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            );\n        }\n    };\n\n    return (\n        <div style={styles.container}>\n            <div style={styles.leftDiv}>\n                <h1 style={styles.header}> Add/Edit People </h1>\n                <p style={styles.header}>\n                    Click on a Person Name to view their data.\n                </p>\n                <PersonProfile Person={person} />\n            </div>\n            <div style={styles.rightDiv}>\n                <h1 style={styles.header}> List of People </h1>\n                {getPeopleList()}\n            </div>\n        </div>\n    );\n};\n\nconst styles = {\n    container: {\n        display: 'flex',\n        height: '100vh',\n        width: '100vw',\n        flexDirection: 'row',\n    },\n    leftDiv: {\n        textAlign: 'center',\n        flex: 0.7,\n    },\n    rightDiv: {\n        flex: 0.3,\n        textAlign: 'center',\n        backgroundColor: 'violet',\n    },\n    header: {\n        marginTop: '30px',\n        color: 'purple',\n    },\n    listDiv: {\n        textAlign: 'start',\n    },\n    li: {\n        color: 'purple',\n        fontSize: '20px',\n        margin: '5px',\n        cursor: 'pointer',\n    },\n};\n\nexport default PeopleProfile;\n","export const query = `\nquery{\n    person(id:\"3eAIEmMPPkNCJF2Bv3kfvb\"){\n      name\n      phoneno\n      dob\n    }\n  }\n`;\n\nexport const queryByID = (id) => {\n    return `\nquery {\n    person(id:${id}){\n        name\n        phoneno\n        dob\n    }\n}\n`;\n};\n\n/* sys.id gives the unique id for that document */\nexport const getAllPersons = `\nquery{\n    personCollection{\n        items{\n            name\n            imageUrl{\n                url\n            }\n            phoneno\n            dob\n            sys{\n                id\n            }\n        }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n    Container,\n    Title,\n    Wrapper,\n    Button,\n    Input,\n    PswdInput,\n} from '../styled-components/StyledComponents';\nimport { PageBG, Text } from '../styled-components/ThemedComponents';\n\n/* A new component based on Button, but with some override styles */\nconst TomatoButton = styled(Button)`\n    color: tomato;\n    border-color: tomato;\n`;\n\nconst ReversedButton = (props) => (\n    <Button {...props} children={props.children.split('').reverse()} />\n);\n\nconst NewPageBG = styled(PageBG)`\n    width: 300px;\n    height: 100px;\n    align-self: centre;\n`;\n\n/* Imp: Define styled component outside of the render method, \n    otherwise it will be recreated on every single render pass */\nconst StyledCompsPage = () => {\n    const history = useHistory();\n    const { t } = useTranslation('common');\n\n    return (\n        <Container>\n            <Wrapper>\n                <Title> My First Styled Component </Title>\n                <Button primary>Primary</Button>\n                <TomatoButton> TomatoButton </TomatoButton>\n                <Button primary as={ReversedButton}>\n                    Custom Button with Normal Button styles\n                </Button>\n                <Input defaultValue=\"@geelen\" type=\"text\" inputColor=\"blue\" />\n                <PswdInput />\n                <Button onClick={() => history.push('/theme')}>\n                    Go to Themed Page\n                </Button>\n                <NewPageBG>\n                    <Text>Themed Text inside a Themed Div</Text>\n                    <Text>{t('currentLang')}</Text>\n                </NewPageBG>\n                <Text> This Text uses theme color </Text>\n            </Wrapper>\n        </Container>\n    );\n};\n\nexport default StyledCompsPage;\n","import React from 'react';\nimport { red, blue, green } from '@material-ui/core/colors';\nimport { AutoRotatingCarousel, Slide } from 'material-auto-rotating-carousel';\n\n/* https://github.com/TeamWertarbyte/material-auto-rotating-carousel */\n\nconst Carousel = () => {\n    return (\n        <div>\n            <AutoRotatingCarousel\n                label=\"Get started\"\n                open={true}\n                hideArrows={() => false}\n                autoplay={true}\n                mobile={true}\n                interval={5000}\n                style={{ position: 'absolute' }}\n            >\n                <Slide\n                    media={\n                        <img\n                            src=\"http://www.icons101.com/icon_png/size_256/id_79394/youtube.png\"\n                            alt=\"Img1\"\n                        />\n                    }\n                    mediaBackgroundStyle={{ backgroundColor: red[400] }}\n                    style={{ backgroundColor: red[600] }}\n                    title=\"This is a very cool feature\"\n                    subtitle=\"Just using this will blow your mind.\"\n                />\n                <Slide\n                    media={\n                        <img\n                            src=\"http://www.icons101.com/icon_png/size_256/id_80975/GoogleInbox.png\"\n                            alt=\"Img2\"\n                        />\n                    }\n                    mediaBackgroundStyle={{ backgroundColor: blue[400] }}\n                    style={{ backgroundColor: blue[600] }}\n                    title=\"Ever wanted to be popular?\"\n                    subtitle=\"Well just mix two colors and your are good to go!\"\n                />\n                <Slide\n                    media={\n                        <img\n                            src=\"http://www.icons101.com/icon_png/size_256/id_76704/Google_Settings.png\"\n                            alt=\"Img3\"\n                        />\n                    }\n                    mediaBackgroundStyle={{ backgroundColor: green[400] }}\n                    style={{ backgroundColor: green[600] }}\n                    title=\"May the force be with you\"\n                    subtitle=\"The Force is a metaphysical and ubiquitous power in the Star Wars fictional universe.\"\n                />\n            </AutoRotatingCarousel>\n        </div>\n    );\n};\n\nexport default Carousel;\n","import React from 'react';\n\nclass PageNotFound extends React.Component {\n    render() {\n        return <div>Page Not Found</div>;\n    }\n}\n\nexport default PageNotFound;\n","const returnCounter = (counter = 2, action) => {\n    switch (action.type) {\n        case 'INCREMENT': {\n            return counter + 1;\n        }\n        case 'DECREMENT': {\n            return counter - 1;\n        }\n        default:\n            return counter;\n    }\n};\n\nexport default returnCounter;\n","const todoList = (items = [], action) => {\n    const newItem = {\n        id: action.id,\n        text: action.text,\n        completed: false,\n    };\n    /* Dont insert anything if input not entered */\n    if (action.text === '') {\n        return [...items];\n    }\n\n    switch (action.type) {\n        case 'ADD_ITEM': {\n            return [...items, newItem];\n        }\n        case 'DELETE_ITEM': {\n            return items.filter((item) => item.id !== action.id);\n        }\n        case 'TOGGLE_ITEM': {\n            return items.map((item) => {\n                if (item.id !== action.id) {\n                    return item;\n                }\n                return { ...item, completed: !item.completed };\n            });\n        }\n        default: {\n            return items;\n        }\n    }\n};\n\nexport default todoList;\n","import { combineReducers, createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport storageSession from 'redux-persist/lib/storage/session';\n\nimport returnCounter from './reducers/counter';\nimport todoList from './reducers/todolist';\n\nconst rootReducer = combineReducers({ returnCounter, todoList });\n\n/*  Can use localStorage or sessionStorage for web; AsyncStorage for react-native.\n    Session storage data, wud be reset to initial state, if tab closed. */\nconst persistConfig = {\n    key: 'root',\n    storage: storageSession,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(persistedReducer);\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import { makeObservable, observable, computed, action } from 'mobx';\nimport store from 'store'; // store.js exposes a simple API for cross-browser local storage\n\nclass Doubler {\n    /* Prefer initializing the counterValue */\n    counterValue = 0;\n\n    constructor() {\n        const existingStore = store.get('counter');\n\n        if (existingStore) {\n            this.counterValue = existingStore;\n        }\n\n        /*  Just write makeAutoObservable(this) if importing makeAutoObservable from mobx.\n            It will itself infer the types */\n        makeObservable(this, {\n            counterValue: observable,\n            double: computed,\n            increment: action,\n            doubleNum: action,\n        });\n    }\n\n    get double() {\n        return this.counterValue * 2;\n    }\n\n    doubleNum() {\n        this.counterValue *= 2;\n        store.set('counter', this.counterValue);\n    }\n\n    increment() {\n        this.counterValue++;\n        store.set('counter', this.counterValue);\n    }\n\n    /* Can use a fn like this if your observable changes by an API call */\n    // async addItem({ _id }) {\n    //     try {\n    //       const response = await ItemService({ _id });\n    //       if (response.success) {\n    //         this.itemUpdate = response;\n    //       }\n    //     } catch (err) {\n    //       return;\n    //     }\n    //   }\n}\n\nexport default Doubler;\n","import Doubler from './doubler.store';\n\n/* Import all stores here */\nclass RootStore {\n    constructor() {\n        this.doubler = new Doubler(this);\n    }\n}\n\nexport default new RootStore();\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { observer } from 'mobx-react';\n\nimport rootStore from '../mobx';\nimport { DIV } from '../styled-components/ThemedComponents';\n\n/* Directly import and call Doubler store like this */\n// const DBLR = new Doubler();\n\nconst MobXEg = () => {\n    /* How to call a computed mobX fn, calling this fn as such didnt update the state */\n    // console.log(' rteur  dbl value ',DBLR.double);\n\n    return (\n        <DIV>\n            <input\n                type=\"number\"\n                value={rootStore.doubler.counterValue}\n                readOnly\n                placeholder=\"Enter a number\"\n            />\n            <Button\n                style={{ backgroundColor: '#21b6ae', color: 'yellow' }}\n                variant=\"contained\"\n                onClick={() => rootStore.doubler.increment()}\n            >\n                Increment\n            </Button>\n            <Button\n                style={{ backgroundColor: '#21b6ae', color: 'yellow' }}\n                variant=\"contained\"\n                onClick={() => rootStore.doubler.doubleNum()}\n            >\n                Double\n            </Button>\n        </DIV>\n    );\n};\n\nexport default observer(MobXEg);\n","import React, { useState } from 'react';\n// import ReduxStore from '../redux/redux-store';\nimport { store } from '../redux/redux-persist';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MobXEg from './MobXEg';\nimport '../index.css';\n\n/*  If we use normal ReduxStore, then we loose the changes of counter & to-do list,\n    whenever the component is re-rendered, using redux-persist solves this issue.  */\nconst ReduxCounter = () => {\n    let inputVal;\n\n    const [count, setValue] = useState(store.getState().returnCounter);\n    const [todoItems, setItemList] = useState(store.getState().todoList);\n    const [filter, setFilter] = useState('SHOW_ALL');\n    const [itemID, setitemID] = useState(0);\n\n    /* To make sure that we get latest values of counter & todoList */\n    store.subscribe(() => setValue(store.getState().returnCounter));\n    store.subscribe(() => setItemList(store.getState().todoList));\n\n    const ToDoItem = ({ item }) => {\n        return (\n            <div className=\"listitem\">\n                <div\n                    className=\"itemText\"\n                    onClick={() =>\n                        store.dispatch({\n                            type: 'TOGGLE_ITEM',\n                            id: item.id,\n                        })\n                    }\n                >\n                    {item.completed ? underlineText(item.text) : item.text}\n                </div>\n                <div className=\"itemRemove\">\n                    <CloseIcon\n                        onClick={() =>\n                            store.dispatch({\n                                type: 'DELETE_ITEM',\n                                id: item.id,\n                            })\n                        }\n                    />\n                </div>\n            </div>\n        );\n    };\n\n    const FilterItem = ({ title, filterName }) => {\n        if (filterName === filter) {\n            return <span> {title} </span>;\n        }\n        return (\n            <div className=\"activeFilter\" onClick={() => setFilter(filterName)}>\n                {title}\n            </div>\n        );\n    };\n\n    const RenderList = () => {\n        let result = todoItems;\n\n        /* Get list based on the current filter, print a msg if no item present */\n        switch (filter) {\n            case 'SHOW_ALL': {\n                if (result.length > 0) {\n                    return <ItemList list={result} />;\n                }\n                return 'No Tasks Noted Down';\n            }\n            case 'ITEMS_COMPLETED': {\n                result = result.filter((item) => item.completed);\n                if (result.length > 0) {\n                    return <ItemList list={result} />;\n                }\n                return 'No Completed Tasks';\n            }\n            case 'ITEMS_PENDING': {\n                result = result.filter((item) => !item.completed);\n                if (result.length > 0) {\n                    return <ItemList list={result} />;\n                }\n                return 'No Pending Tasks';\n            }\n            default:\n                return 'No Tasks Noted Down';\n        }\n    };\n\n    const ItemList = ({ list }) => {\n        return (\n            <div>\n                <ul type=\"square\">\n                    {list.map((item) => (\n                        <li key={item.id}>\n                            <ToDoItem item={item} />\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        );\n    };\n\n    const underlineText = (text) => {\n        return <div className=\"text-striked\"> {text} </div>;\n    };\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <p> Redux Counter and To-Do List Example </p>\n            <p> Counter Value : {count} </p>\n            <Button\n                style={{ backgroundColor: '#21b6ae', color: 'yellow' }}\n                variant=\"contained\"\n                onClick={() => store.dispatch({ type: 'INCREMENT' })}\n            >\n                Inc counter\n            </Button>\n            <Button\n                style={{ backgroundColor: '#21b6ae', color: 'yellow' }}\n                variant=\"contained\"\n                onClick={() => store.dispatch({ type: 'DECREMENT' })}\n            >\n                Dec counter\n            </Button>\n            <div className=\"div_list\">\n                <p> To-Do List </p> <br />\n                <input\n                    ref={(node) => {\n                        inputVal = node;\n                    }}\n                    style={{ width: '200px', height: '25px' }}\n                ></input>\n                <Button\n                    onClick={() => {\n                        store.dispatch({\n                            type: 'ADD_ITEM',\n                            text: inputVal.value,\n                            id: itemID,\n                        });\n                        setitemID(itemID + 1);\n                        inputVal.value = '';\n                    }}\n                    style={{\n                        backgroundColor: '#21b6ae',\n                        marginLeft: '10px',\n                        color: 'yellow',\n                    }}\n                >\n                    Add Item\n                </Button>\n                <div className=\"listOptions\">\n                    <div>\n                        <FilterItem filterName=\"SHOW_ALL\" title=\"All Items\" />\n                    </div>\n                    <div>\n                        <FilterItem\n                            filterName=\"ITEMS_PENDING\"\n                            title=\"Pending\"\n                        />\n                    </div>\n                    <div>\n                        <FilterItem\n                            filterName=\"ITEMS_COMPLETED\"\n                            title=\"Completed\"\n                        />\n                    </div>\n                </div>\n                <RenderList />\n            </div>\n\n            <p> A simple Counter using MobX </p>\n            <MobXEg />\n        </div>\n    );\n};\n\nexport default ReduxCounter;\n","import React from 'react';\nimport { Redirect, Route, Switch, BrowserRouter } from 'react-router-dom';\n\nimport CaslEg from './pages/CaslEg';\nimport FormPage from './pages/FormPage';\nimport Dashboard from './pages/Dashboard';\nimport Homescreen from './pages/Homescreen';\nimport UIComponents from './pages/UIComponents';\nimport ReactHookForm from './pages/ReactHookForm';\nimport PeopleProfile from './pages/PeopleProfile';\nimport ThemeCompsPage from './pages/ThemeCompsPage';\nimport StyledCompsPage from './pages/StyledCompsPage';\n\nimport Carousel from './components/Carousel';\nimport PageNotFound from './components/PageNotFound';\nimport ReduxCounter from './components/ReduxCounter';\nimport { AppThemeContext } from './context/AppThemeContext';\nimport './App.css';\n\nconst App = () => {\n    return (\n        <AppThemeContext>\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path=\"/\" component={Homescreen} />\n                    <Route path=\"/ui\" component={UIComponents} />\n                    <Route path=\"/dashboard\" component={Dashboard} />\n                    <Route path=\"/form\" component={FormPage} />\n                    <Route path=\"/casl\" component={CaslEg} />\n                    <Route path=\"/rhform\" component={ReactHookForm} />\n                    <Route path=\"/styled\" component={StyledCompsPage} />\n                    <Route path=\"/theme\" component={ThemeCompsPage} />\n                    <Route path=\"/redux\" component={ReduxCounter} />\n                    <Route path=\"/carousel\" component={Carousel} />\n                    <Route path=\"/people\" component={PeopleProfile} />\n                    <Route path=\"/404\" component={PageNotFound} />\n                    <Redirect to=\"/404\" />\n                </Switch>\n            </BrowserRouter>\n        </AppThemeContext>\n    );\n};\n\nexport default App;\n","import i18next from 'i18next';\n\nimport common_en from './translations/en/common.json';\nimport common_fr from './translations/fr/common.json';\n\ni18next.init({\n    interpolation: { escapeValue: false }, // React already does escaping\n    lng: 'en', // language to use\n    resources: {\n        en: {\n            common: common_en, // 'common' is our custom namespace\n        },\n        fr: {\n            common: common_fr,\n        },\n    },\n});\n\nconst get18config = () => {\n    return i18next;\n};\n\nexport default get18config;\n","import { Ability, AbilityBuilder } from '@casl/ability';\n\n// Defines how to detect object's type\nfunction subjectName(item) {\n    if (!item || typeof item === 'string') {\n        return item;\n    }\n    return item.__type;\n}\n\nconst ability = new Ability([], { subjectName });\n\n/*  Using Casl, you can basically change Visibility of components, defined by some \n    conditions. Like, for example, what content to show if a person is a normal user\n    or he is an admin. */\nexport function defineUserRules() {\n    const admin = true;\n    const { can, rules } = new AbilityBuilder();\n\n    if (admin) {\n        can('view', ['Dashboard', 'Introduction']);\n        can('drink', ['coffee', 'tea']);\n    } else {\n        can('view', 'Dashboard');\n        can('drink', 'tea');\n    }\n    return rules;\n}\n\nability.update(defineUserRules());\n\nexport default ability;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport { I18nextProvider } from 'react-i18next';\nimport geti18config from './i18-next/i18config';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/redux-persist';\nimport { AbilityContext } from './casl/Can';\nimport ability from './casl/Ability';\n\nconst ReactApp = () => {\n    return (\n        <React.StrictMode>\n            <Provider store={store}>\n                <PersistGate loading={null} persistor={persistor}>\n                    <AbilityContext.Provider value={ability}>\n                        <I18nextProvider i18n={geti18config()}>\n                            <App />\n                        </I18nextProvider>\n                    </AbilityContext.Provider>\n                </PersistGate>\n            </Provider>\n        </React.StrictMode>\n    );\n};\n\nReactDOM.render(<ReactApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}