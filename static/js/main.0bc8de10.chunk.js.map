{"version":3,"sources":["serviceWorker.js","styled-components/StyledComponents.js","styled-components/ThemeButton.js","styled-components/ThemedComponents.js","themes/dark.js","themes/light.js","context/AppThemeContext.js","pages/ThemeCompsPage.js","pages/Homescreen.js","components/Textfield.js","components/Container.js","components/FullWidthGrid.js","components/CustomExpPanel.js","components/AlertDialog.js","components/DataDialog.js","components/Chips.js","components/NestedList.js","components/FolderList.js","components/TableOptions.js","components/NavTabs.js","pages/UIComponents.js","components/PageNotFound.js","components/Drawer.js","components/NavbarTop.js","components/GridLayout.js","pages/Dashboard.js","pages/StyledCompsPage.js","redux/reducers/counter.js","redux/reducers/todolist.js","redux/redux-store.js","components/ReduxCounter.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Container","styled","div","Title","h1","Wrapper","section","Button","button","props","primary","Input","input","inputColor","PswdInput","attrs","type","size","ThemedButton","theme","main","defaultProps","PageBG","bodybgColor","Text","p","textColor","DIV","divbgColor","DarkTheme","LightTheme","ThemeToggleContext","React","createContext","AppThemeContext","children","appTheme","localStorage","getItem","setItem","useState","currentTheme","setTheme","Theme","Provider","value","changeTheme","newTheme","btntheme","ThemeCompsPage","useContext","style","color","onClick","useStyles","makeStyles","root","margin","spacing","BootstrapButton","withStyles","fontSize","textTransform","borderColor","fontFamily","join","backgroundColor","boxShadow","Reactbtns","classes","history","useHistory","className","variant","endIcon","fetchData","startIcon","sendData","disableRipple","activateLasers","push","to","pathname","data","name","msg","href","fetch","method","then","res","json","result","console","log","error","headers","Accept","body","JSON","stringify","username","password","Homescreen","Component","width","CustomSwitch","switchBase","checked","track","Switch","handleChange","event","target","document","getElementById","TextFieldsFunction","noValidate","autoComplete","TextField","required","id","label","defaultValue","InputProps","readOnly","helperText","FormControlLabel","control","onChange","Textfield","FixedContainer","Fragment","CssBaseline","fixed","Typography","component","height","flexGrow","paper","padding","textAlign","FullWidthGrid","Grid","container","item","xs","Paper","sm","ExpansionPanel","border","borderBottom","display","expanded","MuiExpansionPanel","ExpansionPanelSummary","marginBottom","minHeight","content","MuiExpansionPanelSummary","ExpansionPanelDetails","MuiExpansionPanelDetails","CustomExpPanel","setExpanded","panel","newExpanded","square","aria-controls","AlertDialog","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","options","ConfirmationDialogRaw","valueProp","other","setValue","radioGroupRef","useRef","useEffect","disableBackdropClick","disableEscapeKeyDown","maxWidth","onEntering","current","focus","dividers","RadioGroup","ref","aria-label","map","option","key","Radio","palette","background","maxHeight","DataDialog","List","role","ListItem","divider","disabled","ListItemText","aria-haspopup","secondary","keepMounted","newValue","justifyContent","flexWrap","listStyle","chip","Chips","chipData","setChipData","icon","chipToDelete","Chip","onDelete","undefined","chips","filter","colorchip","nested","paddingLeft","NestedList","subheader","ListSubheader","ListItemIcon","Collapse","in","timeout","unmountOnExit","disablePadding","listItem","FolderList","ListItemAvatar","Avatar","Divider","Tooltip","title","placement","arrow","light","createData","calories","fat","carbs","protein","rows","descendingComparator","a","b","orderBy","headCells","numeric","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","paddingRight","highlight","lighten","text","dark","flex","EnhancedTableToolbar","Toolbar","clsx","IconButton","table","minWidth","clip","overflow","position","top","TableOptions","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","TableContainer","Table","newSelecteds","n","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","TabPanel","hidden","Box","a11yProps","NavTabs","AppBar","Tabs","Tab","wrapped","UIComponents","PageNotFound","list","listicon","fullList","drawerPaper","menu","marginLeft","marginRight","Drawer","left","bottom","right","state","setState","toggleDrawer","anchor","SwipeableDrawer","onOpen","onKeyDown","grow","navbgcolor","menuButton","breakpoints","up","search","borderRadius","shape","fade","common","white","searchIcon","pointerEvents","alignItems","inputRoot","inputInput","transition","transitions","create","sectionDesktop","sectionMobile","NavbarTop","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","renderMobileMenu","Badge","badgeContent","noWrap","InputBase","placeholder","onKeyUp","keyCode","val","edge","fabGreen","GreenCheckbox","GridLayout","checkedA","checkedB","checkedF","checkedG","handleCBChange","md","elevation","checkedIcon","checkedC","Fab","Dashboard","TomatoButton","ReversedButton","split","reverse","NewPageBG","StyledCompsPage","as","returnCounter","counter","action","todoList","items","newItem","completed","reducer","combineReducers","ReduxStore","createStore","ReduxCounter","inputVal","getState","todoItems","setItemList","setFilter","itemID","setitemID","subscribe","ToDoItem","dispatch","underlineText","FilterItem","filterName","RenderList","ItemList","node","App","exact","path","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.0bc8de10.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import styled from 'styled-components';\n\n/* Refer\n    https://styled-components.com/docs/basics#installation\n*/\n\n/* Creating and exporting pre-styled HTML components */\nexport const Container = styled.div`\n    background-color: skyblue;\n    padding: 20px;\n`;\n\nexport const Title = styled.h1`\n    font-size: 1.5em;\n    text-align: center;\n    color: palevioletred;\n`;\n\n/* Create a Wrapper component that'll render a <section> tag with some styles */\nexport const Wrapper = styled.section`\n    padding: 4em;\n    background: papayawhip;\n`;\n\n/* Adapt the colors based on primary prop */\nexport const Button = styled.button`\n    background: ${(props) => (props.primary ? 'palevioletred' : 'white')};\n    color: ${(props) => (props.primary ? 'white' : 'palevioletred')};\n\n    font-size: 1em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border: 2px solid palevioletred;\n    border-radius: 3px;\n`;\n\nexport const Input = styled.input`\n    padding: 0.5em;\n    margin: 0.5em;\n    color: ${(props) => props.inputColor || 'palevioletred'};\n    background: lightgreen;\n    border: none;\n    font-weight: bold;\n    border-radius: 3px;\n`;\n\nexport const PswdInput = styled.input.attrs((props) => ({\n    // we can define static props\n    type: 'password',\n    // or we can define dynamic ones\n    size: props.size || '1em',\n}))`\n    color: palevioletred;\n    font-size: 1em;\n    border: 2px solid blue;\n    border-radius: 3px;\n\n    /* here we use the dynamically computed prop */\n    margin: ${(props) => props.size};\n    padding: ${(props) => props.size};\n`;\n","import styled from 'styled-components';\n\n/* Refer\n    https://styled-components.com/docs/advanced\n*/\n\n/* Define our button, but with the use of props.theme this time */\n/* Color the border and text with theme.main */\n\nconst ThemedButton = styled.button`\n    font-size: 1em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border-radius: 3px;\n    color: ${(props) => props.theme.main};\n    border: 2px solid ${(props) => props.theme.main};\n`;\n\nThemedButton.defaultProps = {\n    theme: {\n        main: 'palevioletred',\n    },\n};\n\nexport default ThemedButton;\n","import styled from 'styled-components';\n\nexport const PageBG = styled.div`\n    background-color: ${(props) => props.theme.bodybgColor};\n    padding: 20px;\n`;\n\nexport const Text = styled.p`\n    font-size: 20px;\n    color: ${(props) => props.theme.textColor};\n`;\n\nexport const DIV = styled.div`\n    background-color: ${(props) => props.theme.divbgColor};\n    padding: 20px;\n    text-align: centre;\n`;\n","export const DarkTheme = {\n    bodybgColor: '#000000',\n    textColor: '#ffffff',\n    divbgColor: 'darkgreen',\n};\n","export const LightTheme = {\n    bodybgColor: '#ffffff',\n    textColor: '#000000',\n    divbgColor: 'lightgreen',\n};\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport { DarkTheme } from '../themes/dark';\nimport { LightTheme } from '../themes/light';\n\nexport const ThemeToggleContext = React.createContext();\n\nexport const AppThemeContext = ({ children }) => {\n    /* Set theme as a localStorage item to prevent loosing them on page refresh */\n    let appTheme = localStorage.getItem('theme');\n    if (!appTheme) {\n        appTheme = 'light';\n        localStorage.setItem('theme', appTheme);\n    }\n\n    const [currentTheme, setTheme] = React.useState(appTheme);\n\n    const themeToggle = (newTheme) => {\n        localStorage.setItem('theme', newTheme);\n        setTheme(newTheme);\n    };\n\n    const Theme = ({ children }) => {\n        return (\n            <ThemeProvider\n                theme={currentTheme === 'light' ? LightTheme : DarkTheme}\n            >\n                {children}\n            </ThemeProvider>\n        );\n    };\n\n    return (\n        <ThemeToggleContext.Provider\n            value={{ theme: currentTheme, changeTheme: themeToggle }}\n        >\n            <Theme>{children}</Theme>\n        </ThemeToggleContext.Provider>\n    );\n};\n\n// export default AppThemeContext;\n","import React, { useContext } from 'react';\n\nimport { Button, Title } from '../styled-components/StyledComponents';\nimport ThemedButton from '../styled-components/ThemeButton';\nimport { PageBG, Text, DIV } from '../styled-components/ThemedComponents';\nimport { ThemeToggleContext } from '../context/AppThemeContext';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\n\n/* We are passing a default theme for Buttons that arent wrapped in the ThemeProvider */\nconst btntheme = {\n    main: 'mediumseagreen',\n};\n\n/* The app Theme changes through React Context; code in the context folder */\n\nconst ThemeCompsPage = () => {\n    const { theme, changeTheme } = useContext(ThemeToggleContext);\n    const changeAppTheme = () => {\n        changeTheme(theme === 'light' ? 'dark' : 'light');\n    };\n\n    return (\n        <PageBG>\n            <DIV>\n                <Title> Themed Components </Title>\n                <Text> Click on the Below Btn to switch Themes </Text>\n                <InvertColorsIcon\n                    style={{ color: 'blue' }}\n                    onClick={changeAppTheme}\n                />\n                <Button>Normal</Button>\n                <ThemedButton theme={btntheme}>Themed</ThemedButton>\n            </DIV>\n        </PageBG>\n    );\n};\n\nexport default ThemeCompsPage;\n","import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { useHistory } from 'react-router-dom';\n\nimport ThemeCompsPage from './ThemeCompsPage';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\nconst BootstrapButton = withStyles({\n    root: {\n        fontSize: 16,\n        textTransform: 'none', // else it wud caps all the text\n        borderColor: '#007ABA',\n        fontFamily: ['\"Helvetica Neue\"'].join(','),\n        '&:hover': {\n            backgroundColor: '#0069d9',\n            borderColor: 'red',\n            boxShadow: 'none',\n        },\n        '&:active': {\n            boxShadow: 'none',\n            backgroundColor: '#0062cc',\n            borderColor: '#005cbf',\n        },\n        '&:focus': {\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n        },\n    },\n    button: {\n        backgroundColor: 'orange',\n        color: '#007aba',\n    },\n})(Button);\n\nfunction Reactbtns() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    return (\n        <div className={classes.root}>\n            <Button\n                style={{ backgroundColor: '#21b6ae', color: 'yellow' }}\n                variant=\"contained\"\n                className={classes.button}\n                endIcon={<CloudUploadIcon />}\n                onClick={fetchData}\n            >\n                Fetch data\n            </Button>\n            <br />\n            <Button\n                variant=\"outlined\"\n                style={{ color: '#21b6ae' }}\n                className={classes.button}\n                startIcon={<SaveIcon />}\n                onClick={sendData}\n            >\n                Login\n            </Button>\n            <BootstrapButton\n                variant=\"contained\"\n                color=\"primary\"\n                disableRipple\n                onClick={activateLasers}\n            >\n                Activate Lazers\n            </BootstrapButton>\n\n            <BootstrapButton\n                variant=\"outlined\"\n                color=\"primary\"\n                disableRipple\n                onClick={() => history.push('/styled')}\n            >\n                GoTo Styled Components\n            </BootstrapButton>\n\n            <Link\n                to={{\n                    pathname: '/ui',\n                    data: { name: 'nish', msg: 'Hi people' },\n                }}\n            >\n                Click Me\n            </Link>\n\n            <Link\n                to={{\n                    pathname: '/dashboard',\n                }}\n            >\n                Go to dashboard\n            </Link>\n            <Link\n                to={{\n                    pathname: '/redux',\n                }}\n            >\n                Open a To-do List\n            </Link>\n        </div>\n    );\n}\n\nfunction activateLasers() {\n    window.location.href = '/ui';\n}\n\n/* Run node server */\nfunction fetchData() {\n    fetch('http://localhost:4000/items', {\n        method: 'GET',\n    })\n        .then((res) => res.json())\n        .then(\n            (result) => {\n                console.log(result);\n            },\n            (error) => {\n                console.log(error);\n            }\n        );\n}\n\nfunction sendData() {\n    const data = {\n        username: 'nk@qw.qw',\n        password: 'nish134',\n    };\n\n    fetch('http://localhost:4000/data', {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    })\n        .then((res) => res.json())\n        .then(\n            (result) => {\n                console.log(result);\n            },\n            (error) => {\n                //console.log(error);\n            }\n        );\n}\n\nclass Homescreen extends React.Component {\n    render() {\n        return (\n            <>\n                <ThemeCompsPage />\n                <Reactbtns />\n            </>\n        );\n    }\n}\n\nexport default Homescreen;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n}));\n\nconst CustomSwitch = withStyles({\n    switchBase: {\n        color: 'yellow',\n        '&$checked': {\n            color: 'red',\n        },\n        '&$checked + $track': {\n            backgroundColor: '#006699',\n        },\n    },\n    checked: {},\n    track: {},\n})(Switch);\n\nconst handleChange = (event) => {\n    if (event.target.checked) {\n        document.getElementById('standard-required').value =\n            'Switch Toggled On';\n    } else {\n        document.getElementById('standard-required').value = 'Toggled Off';\n    }\n};\n\nfunction TextFieldsFunction() {\n    const classes = useStyles();\n    return (\n        <form className={classes.root} noValidate autoComplete=\"off\">\n            <div>\n                <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Required\"\n                    defaultValue=\"Hello World\"\n                />\n                <TextField\n                    id=\"standard-password-input\"\n                    label=\"Password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                />\n                <TextField\n                    id=\"standard-read-only-input\"\n                    label=\"Read Only\"\n                    defaultValue=\"Hello World\"\n                    InputProps={{ readOnly: true }}\n                />\n                <TextField\n                    error\n                    id=\"standard-error-helper-text\"\n                    label=\"Error\"\n                    defaultValue=\"Hello World\"\n                    helperText=\"Incorrect entry.\"\n                />\n                <FormControlLabel\n                    control={\n                        <Switch\n                            onChange={handleChange}\n                            name=\"checkedB\"\n                            color=\"primary\"\n                        />\n                    }\n                    label=\"Change value of reqd field\"\n                />{' '}\n                <br />\n                <FormControlLabel\n                    control={\n                        <CustomSwitch onChange={handleChange} name=\"checkedC\" />\n                    }\n                    label=\"Change value of reqd field\"\n                />\n            </div>\n        </form>\n    );\n}\n\nclass Textfield extends React.Component {\n    render() {\n        return <TextFieldsFunction />;\n    }\n}\n\nexport default Textfield;\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nexport default function FixedContainer() {\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Container fixed>\n                <Typography\n                    component=\"div\"\n                    style={{ backgroundColor: '#cfe8fc', height: '100px' }}\n                >\n                    Inside Container\n                    <div style={{ backgroundColor: 'pink', color: '#FFFFFF' }}>\n                        Inside the pink Container\n                    </div>\n                </Typography>\n            </Container>\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        margin: theme.spacing(0.5),\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'blue',\n        backgroundColor: 'lightgreen',\n    },\n}));\n\nexport default function FullWidthGrid() {\n    const classes = useStyles();\n    /* Spacing = 3 Means, spacing between 2 row elements is 8px * 3 = 24px */\n    return (\n        <div className={classes.root}>\n            <Grid container>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}>xs=12</Paper>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Paper className={classes.paper}>xs=12 sm=6</Paper>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Paper className={classes.paper}>xs=12 sm=6</Paper>\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <Paper className={classes.paper}>xs=6 sm=3</Paper>\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <Paper className={classes.paper}>xs=6 sm=3</Paper>\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <Paper className={classes.paper}>xs=6 sm=3</Paper>\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <Paper className={classes.paper}>xs=6 sm=3</Paper>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\n\nconst ExpansionPanel = withStyles({\n    root: {\n        border: '1px solid rgba(0, 0, 0, .125)',\n        backgroundColor: 'lightgreen',\n        boxShadow: 'none',\n        '&:not(:last-child)': {\n            borderBottom: 0,\n        },\n        '&:before': {\n            display: 'none',\n        },\n        '&$expanded': {\n            margin: 'auto',\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        backgroundColor: 'skyblue',\n        borderBottom: '1px solid orange',\n        marginBottom: -1,\n        minHeight: 56,\n        '&$expanded': {\n            minHeight: 56,\n        },\n    },\n    content: {\n        '&$expanded': {\n            margin: '12px 0',\n        },\n    },\n    expanded: {\n        backgroundColor: '#007ABA',\n    },\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiExpansionPanelDetails);\n\nexport default function CustomExpPanel() {\n    const [expanded, setExpanded] = React.useState('panel1');\n\n    const handleChange = (panel) => (event, newExpanded) => {\n        setExpanded(newExpanded ? panel : false);\n    };\n\n    return (\n        <div>\n            <ExpansionPanel\n                square\n                expanded={expanded === 'panel1'}\n                onChange={handleChange('panel1')}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <Typography>Collapsible Group Item #1</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Typography>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Suspendisse malesuada lacus ex, sit amet blandit leo\n                        lobortis eget. Lorem ipsum dolor sit amet, consectetur\n                        adipiscing elit. Suspendisse malesuada lacus ex, sit\n                        amet blandit leo lobortis eget.\n                    </Typography>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel\n                square\n                expanded={expanded === 'panel2'}\n                onChange={handleChange('panel2')}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel2d-content\"\n                    id=\"panel2d-header\"\n                >\n                    <Typography>Collapsible Group Item #2</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Typography>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Suspendisse malesuada lacus ex, sit amet blandit leo\n                        lobortis eget. Lorem ipsum dolor sit amet, consectetur\n                        adipiscing elit. Suspendisse malesuada lacus ex, sit\n                        amet blandit leo lobortis eget.\n                    </Typography>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel\n                square\n                expanded={expanded === 'panel3'}\n                onChange={handleChange('panel3')}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel3d-content\"\n                    id=\"panel3d-header\"\n                >\n                    <Typography>Collapsible Group Item #3</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Typography>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Suspendisse malesuada lacus ex, sit amet blandit leo\n                        lobortis eget. Lorem ipsum dolor sit amet, consectetur\n                        adipiscing elit. Suspendisse malesuada lacus ex, sit\n                        amet blandit leo lobortis eget.\n                    </Typography>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </div>\n    );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function AlertDialog() {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleClickOpen}\n            >\n                Open alert dialog\n            </Button>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {\"Use Google's location service?\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Let Google help apps determine location. This means\n                        sending anonymous location data to Google, even when no\n                        apps are running.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Disagree\n                    </Button>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Agree\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst options = [\n    'None',\n    'Atria',\n    'Callisto',\n    'Dione',\n    'Ganymede',\n    'Hangouts Call',\n    'Luna',\n    'Oberon',\n    'Phobos',\n    'Pyxis',\n    'Sedna',\n    'Titania',\n    'Triton',\n    'Umbriel',\n];\n\nfunction ConfirmationDialogRaw(props) {\n    const { onClose, value: valueProp, open, ...other } = props;\n    const [value, setValue] = React.useState(valueProp);\n    const radioGroupRef = React.useRef(null);\n\n    React.useEffect(() => {\n        if (!open) {\n            setValue(valueProp);\n        }\n    }, [valueProp, open]);\n\n    const handleEntering = () => {\n        if (radioGroupRef.current != null) {\n            radioGroupRef.current.focus();\n        }\n    };\n\n    const handleCancel = () => {\n        onClose();\n    };\n\n    const handleOk = () => {\n        onClose(value);\n    };\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n    };\n\n    return (\n        <Dialog\n            disableBackdropClick\n            disableEscapeKeyDown\n            maxWidth=\"xs\"\n            onEntering={handleEntering}\n            aria-labelledby=\"confirmation-dialog-title\"\n            open={open}\n            {...other}\n        >\n            <DialogTitle id=\"confirmation-dialog-title\">\n                Phone Ringtone\n            </DialogTitle>\n            <DialogContent dividers>\n                <RadioGroup\n                    ref={radioGroupRef}\n                    aria-label=\"ringtone\"\n                    name=\"ringtone\"\n                    value={value}\n                    onChange={handleChange}\n                >\n                    {options.map((option) => (\n                        <FormControlLabel\n                            value={option}\n                            key={option}\n                            control={<Radio />}\n                            label={option}\n                        />\n                    ))}\n                </RadioGroup>\n            </DialogContent>\n            <DialogActions>\n                <Button autoFocus onClick={handleCancel} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={handleOk} color=\"primary\">\n                    Ok\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nConfirmationDialogRaw.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    value: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    paper: {\n        width: '80%',\n        maxHeight: 435,\n    },\n}));\n\nexport default function DataDialog() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [value, setValue] = React.useState('Dione');\n\n    const handleClickListItem = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (newValue) => {\n        setOpen(false);\n\n        if (newValue) {\n            setValue(newValue);\n        }\n    };\n\n    return (\n        <div className={classes.root}>\n            <List component=\"div\" role=\"list\">\n                <ListItem button divider disabled role=\"listitem\">\n                    <ListItemText primary=\"Interruptions\" />\n                </ListItem>\n                <ListItem\n                    button\n                    divider\n                    aria-haspopup=\"true\"\n                    aria-controls=\"ringtone-menu\"\n                    aria-label=\"phone ringtone\"\n                    onClick={handleClickListItem}\n                    role=\"listitem\"\n                >\n                    <ListItemText primary=\"Phone ringtone\" secondary={value} />\n                </ListItem>\n                <ListItem button divider disabled role=\"listitem\">\n                    <ListItemText\n                        primary=\"Default notification ringtone\"\n                        secondary=\"Tethys\"\n                    />\n                </ListItem>\n                <ConfirmationDialogRaw\n                    classes={{\n                        paper: classes.paper,\n                    }}\n                    id=\"ringtone-menu\"\n                    keepMounted\n                    open={open}\n                    onClose={handleClose}\n                    value={value}\n                />\n            </List>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(0.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\nexport default function Chips() {\n    const classes = useStyles();\n    const [chipData, setChipData] = React.useState([\n        { key: 0, label: 'Angular' },\n        { key: 1, label: 'jQuery' },\n        { key: 2, label: 'Polymer' },\n        { key: 3, label: 'React' },\n        { key: 4, label: 'Vue.js' },\n    ]);\n\n    const colorChips = ['red', 'skyblue', 'green', 'orange', 'yellow'];\n\n    const handleDelete = (chipToDelete) => () => {\n        setChipData((chips) =>\n            chips.filter((chip) => chip.key !== chipToDelete.key)\n        );\n    };\n\n    return (\n        <Paper component=\"ul\" className={classes.root}>\n            {chipData.map((data) => {\n                let icon;\n\n                if (data.label === 'React') {\n                    icon = <TagFacesIcon />;\n                }\n\n                return (\n                    <li key={data.key}>\n                        <Chip\n                            icon={icon}\n                            label={data.label}\n                            onDelete={\n                                data.label === 'React'\n                                    ? undefined\n                                    : handleDelete(data)\n                            }\n                            className={classes.chip}\n                        />\n                    </li>\n                );\n            })}\n            {/* practice example in chips */} <br />\n            {colorChips.map((colorchip) => {\n                return (\n                    <li key={colorchip}>\n                        <Chip\n                            label={colorchip}\n                            className={classes.chip}\n                            style={{ backgroundColor: colorchip }}\n                        />\n                    </li>\n                );\n            })}\n        </Paper>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: '#4c4c4c',\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}));\n\nexport default function NestedList() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n\n    const handleClick = () => {\n        setOpen(!open);\n    };\n\n    return (\n        <List\n            component=\"nav\"\n            aria-labelledby=\"nested-list-subheader\"\n            subheader={\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                    Nested List Items\n                </ListSubheader>\n            }\n            className={classes.root}\n        >\n            <ListItem button>\n                <ListItemIcon>\n                    <SendIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Sent mail\" />\n            </ListItem>\n            <ListItem button>\n                <ListItemIcon>\n                    <DraftsIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Drafts\" />\n            </ListItem>\n            <ListItem button onClick={handleClick}>\n                <ListItemIcon>\n                    <InboxIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Inbox\" />\n                {open ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button className={classes.nested}>\n                        <ListItemIcon>\n                            <StarBorder />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Starred\" />\n                    </ListItem>\n                </List>\n            </Collapse>\n        </List>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nimport Divider from '@material-ui/core/Divider';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    listItem: {\n        backgroundColor: 'skyblue',\n        color: 'purple',\n    },\n}));\n\nexport default function FolderList() {\n    const classes = useStyles();\n\n    return (\n        <List className={classes.root}>\n            <ListItem className={classes.listItem}>\n                <ListItemAvatar>\n                    <Avatar>\n                        <ImageIcon />\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary=\"Photos\" secondary=\"Jan 9, 2014\" />\n            </ListItem>\n            <Divider />\n\n            <Tooltip title=\"Work baby\" placement=\"right-start\" arrow>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <WorkIcon style={{ color: 'lightgreen' }} />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Work\" secondary=\"Jan 7, 2014\" />\n                </ListItem>\n            </Tooltip>\n\n            <Divider light />\n            <ListItem>\n                <ListItemText primary=\"Vacation\" secondary=\"July 20, 2014\" />\n                <ListItemAvatar>\n                    <Avatar>\n                        <BeachAccessIcon />\n                    </Avatar>\n                </ListItemAvatar>\n            </ListItem>\n        </List>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nfunction createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Donut', 452, 25.0, 51, 4.9),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n    createData('Honeycomb', 408, 3.2, 87, 6.5),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Jelly Bean', 375, 0.0, 94, 0.0),\n    createData('KitKat', 518, 26.0, 65, 7.0),\n    createData('Lollipop', 392, 0.2, 98, 0.0),\n    createData('Marshmallow', 318, 0, 81, 2.0),\n    createData('Nougat', 360, 19.0, 9, 37.0),\n    createData('Oreo', 437, 18.0, 63, 4.0),\n];\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    {\n        id: 'name',\n        numeric: false,\n        disablePadding: true,\n        label: 'Dessert (100g serving)',\n    },\n    { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n    { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n    { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n    {\n        id: 'protein',\n        numeric: true,\n        disablePadding: false,\n        label: 'Protein (g)',\n    },\n];\n\nfunction EnhancedTableHead(props) {\n    const {\n        classes,\n        onSelectAllClick,\n        order,\n        orderBy,\n        numSelected,\n        rowCount,\n        onRequestSort,\n    } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={\n                            numSelected > 0 && numSelected < rowCount\n                        }\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc'\n                                        ? 'sorted descending'\n                                        : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected } = props;\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography\n                    className={classes.title}\n                    color=\"inherit\"\n                    variant=\"subtitle1\"\n                    component=\"div\"\n                >\n                    {numSelected} selected\n                </Typography>\n            ) : (\n                <Typography\n                    className={classes.title}\n                    variant=\"h6\"\n                    id=\"tableTitle\"\n                    component=\"div\"\n                >\n                    Nutrition\n                </Typography>\n            )}\n\n            {numSelected > 0 ? (\n                <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"delete\">\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            ) : (\n                <Tooltip title=\"Filter list\">\n                    <IconButton aria-label=\"filter list\">\n                        <FilterListIcon />\n                    </IconButton>\n                </Tooltip>\n            )}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function TableOptions() {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('calories');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleChangeDense = (event) => {\n        setDense(event.target.checked);\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows =\n        rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar numSelected={selected.length} />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getComparator(order, orderBy))\n                                .slice(\n                                    page * rowsPerPage,\n                                    page * rowsPerPage + rowsPerPage\n                                )\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row.name);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={(event) =>\n                                                handleClick(event, row.name)\n                                            }\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.name}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    inputProps={{\n                                                        'aria-labelledby': labelId,\n                                                    }}\n                                                />\n                                            </TableCell>\n                                            <TableCell\n                                                component=\"th\"\n                                                id={labelId}\n                                                scope=\"row\"\n                                                padding=\"none\"\n                                            >\n                                                {row.name}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row.calories}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row.fat}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row.carbs}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row.protein}\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow\n                                    style={{\n                                        height: (dense ? 33 : 53) * emptyRows,\n                                    }}\n                                >\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            <FormControlLabel\n                control={\n                    <Switch checked={dense} onChange={handleChangeDense} />\n                }\n                label=\"Dense padding\"\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport PhoneIcon from '@material-ui/icons/Phone';\n\n/* Import Tab Content Components */\nimport Textfield from '../components/Textfield';\nimport Container from '../components/Container';\nimport FullWidthGrid from '../components/FullWidthGrid';\nimport CustomExpPanel from '../components/CustomExpPanel';\nimport AlertDialog from '../components/AlertDialog';\nimport DataDialog from '../components/DataDialog';\nimport Chips from '../components/Chips';\nimport NestedList from '../components/NestedList';\nimport FolderList from '../components/FolderList';\nimport TableOptions from '../components/TableOptions';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function NavTabs() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(1); //the tab index to be selected\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Tabs\n                    value={value}\n                    variant=\"fullWidth\"\n                    onChange={handleChange}\n                    aria-label=\"simple tabs example\"\n                >\n                    <Tab\n                        label=\"TextField\"\n                        icon={<PhoneIcon />}\n                        wrapped\n                        {...a11yProps(0)}\n                    />\n                    <Tab label=\"Container\" {...a11yProps(1)} />\n                    <Tab label=\"Grids\" {...a11yProps(2)} />\n                    <Tab label=\"Disabled Tab\" disabled {...a11yProps(3)} />\n                    <Tab label=\"Tables\" {...a11yProps(4)} />\n                </Tabs>\n            </AppBar>\n\n            <TabPanel value={value} index={0}>\n                <Textfield />\n                <br />\n                <Chips /> <br />\n                <NestedList />\n            </TabPanel>\n\n            <TabPanel value={value} index={1}>\n                <Container /> <br />\n                <CustomExpPanel /> <br />\n                <FolderList />\n            </TabPanel>\n\n            <TabPanel value={value} index={2}>\n                <FullWidthGrid /> <br />\n                <AlertDialog /> <br />\n                <DataDialog />\n            </TabPanel>\n\n            <TabPanel value={value} index={3}>\n                This Table is disabled.\n            </TabPanel>\n\n            <TabPanel value={value} index={4}>\n                <TableOptions />\n            </TabPanel>\n        </div>\n    );\n}\n","import React from 'react';\nimport '../assets/styles/style.css';\nimport NavTabs from '../components/NavTabs';\n\nclass UIComponents extends React.Component {\n    render() {\n        return (\n            <div className=\"header\">\n                <NavTabs />\n            </div>\n        );\n    }\n}\n\nexport default UIComponents;\n","import React from 'react';\n\nclass PageNotFound extends React.Component {\n    render() {\n        return <div>Page Not Found</div>;\n    }\n}\n\nexport default PageNotFound;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n        color: '#FFFFFF',\n    },\n    listicon: {\n        color: '#FFFFFF',\n    },\n    fullList: {\n        width: 'auto',\n    },\n    drawerPaper: {\n        background: '#2E3B55',\n    },\n    menu: {\n        color: '#FFFFFF',\n        marginLeft: '-10px',\n        marginRight: '20px',\n    },\n});\n/* Swipeable Drawer */\nexport default function Drawer() {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n    });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (\n            event &&\n            event.type === 'keydown' &&\n            (event.key === 'Tab' || event.key === 'Shift')\n        ) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n\n    const list = (anchor) => (\n        <div\n            className={clsx(classes.list, {\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n            })}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List>\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map(\n                    (text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon className={classes.listicon}>\n                                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                            </ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    )\n                )}\n            </List>\n            <Divider />\n            <List>\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemIcon className={classes.listicon}>\n                            {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <div>\n            {['left'].map((anchor) => (\n                <React.Fragment key={anchor}>\n                    <IconButton\n                        className={classes.menu}\n                        onClick={toggleDrawer(anchor, true)}\n                    >\n                        {' '}\n                        <MenuIcon />{' '}\n                    </IconButton>\n                    <SwipeableDrawer\n                        anchor={anchor}\n                        open={state[anchor]}\n                        onClose={toggleDrawer(anchor, false)}\n                        onOpen={toggleDrawer(anchor, true)}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                    >\n                        {list(anchor)}\n                    </SwipeableDrawer>\n                </React.Fragment>\n            ))}\n        </div>\n    );\n}\n","import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\n/* Import Drawer Component */\nimport Drawer from './Drawer';\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    navbgcolor: {\n        backgroundColor: '#2E3B55',\n    },\n    menuButton: {\n        marginLeft: theme.spacing(1),\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nexport default function NavbarTop() {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n    /* Get the value typed in the input field */\n    function handleInput(event) {\n        console.log('event : ', event.keyCode);\n        const val = document.getElementById('searchInput').value;\n        console.log(val);\n    }\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                    <Badge badgeContent={4} color=\"secondary\">\n                        <MailIcon />\n                    </Badge>\n                </IconButton>\n                <p>Messages</p>\n            </MenuItem>\n            <MenuItem>\n                <IconButton\n                    aria-label=\"show 11 new notifications\"\n                    color=\"inherit\"\n                >\n                    <Badge badgeContent={11} color=\"secondary\">\n                        <NotificationsIcon />\n                    </Badge>\n                </IconButton>\n                <p>Notifications</p>\n            </MenuItem>\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\" className={classes.navbgcolor}>\n                <Toolbar>\n                    <Drawer className={classes.menuButton} />\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        Material-UI\n                    </Typography>\n\n                    <div className={classes.grow} />\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            id=\"searchInput\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            onKeyUp={handleInput}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                    <div className={classes.sectionDesktop}>\n                        <IconButton\n                            aria-label=\"show 4 new mails\"\n                            color=\"inherit\"\n                        >\n                            <Badge badgeContent={4} color=\"secondary\">\n                                <MailIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            aria-label=\"show 17 new notifications\"\n                            color=\"inherit\"\n                        >\n                            <Badge badgeContent={17} color=\"secondary\">\n                                <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\n// Export some other Components from files in the components folder\n// import DatePicker from './DatePicker'; // some err in the module\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        margin: theme.spacing(0.5),\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'blue',\n        // backgroundColor:'lightgreen'\n    },\n    fabGreen: {\n        color: 'blue',\n        backgroundColor: 'orange',\n        '&:hover': {\n            backgroundColor: 'teal',\n        },\n    },\n}));\nconst GreenCheckbox = withStyles({\n    root: {\n        color: 'pink', //when cb is unchecked\n        '&$checked': {\n            color: 'blue', // when cb checked\n        },\n    },\n    checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nexport default function GridLayout() {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: false,\n        checkedF: true,\n        checkedG: true,\n    });\n\n    const handleCBChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n    const fabClicked = (event) => {\n        console.log('fab btn clicked');\n    };\n\n    return (\n        <div>\n            Inside form body\n            <div className={classes.root}>\n                <Grid container>\n                    <Grid item xs={12} md={4}>\n                        <Paper elevation={5} className={classes.paper}>\n                            <FormControlLabel\n                                checked={state.checkedB}\n                                control={\n                                    <Checkbox\n                                        checked={state.checkedB}\n                                        onChange={handleCBChange}\n                                        name=\"checkedB\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Primary\"\n                            />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <Paper className={classes.paper}>\n                            <FormControlLabel\n                                checked={state.checkedA}\n                                control={\n                                    <Checkbox\n                                        icon={<Favorite />}\n                                        checkedIcon={<Favorite />}\n                                        name=\"checkedA\"\n                                        onChange={handleCBChange}\n                                    />\n                                }\n                                label=\"Custom icon\"\n                            />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <Paper className={classes.paper}>\n                            <FormControlLabel\n                                control={\n                                    <GreenCheckbox\n                                        checked={state.checkedC}\n                                        onChange={handleCBChange}\n                                        name=\"checkedC\"\n                                    />\n                                }\n                                label=\"Custom color\"\n                            />\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n            <Fab\n                className={classes.fabGreen}\n                onClick={fabClicked}\n                size=\"small\"\n                aria-label=\"add\"\n            >\n                {' '}\n                <AddIcon />{' '}\n            </Fab>\n            {/* <DatePicker /> */}\n        </div>\n    );\n}\n","import React from 'react';\nimport NavbarTop from '../components/NavbarTop';\nimport GridLayout from '../components/GridLayout';\n\nclass Dashboard extends React.Component {\n    render() {\n        return (\n            <div>\n                <NavbarTop />\n                <GridLayout />\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n    Container,\n    Title,\n    Wrapper,\n    Button,\n    Input,\n    PswdInput,\n} from '../styled-components/StyledComponents';\nimport { PageBG, Text } from '../styled-components/ThemedComponents';\n\n/* A new component based on Button, but with some override styles */\nconst TomatoButton = styled(Button)`\n    color: tomato;\n    border-color: tomato;\n`;\n\nconst ReversedButton = (props) => (\n    <Button {...props} children={props.children.split('').reverse()} />\n);\n\nconst NewPageBG = styled(PageBG)`\n    width: 300px;\n    height: 100px;\n    align-self: centre;\n`;\n\n/* Imp: Define styled component outside of the render method, \n    otherwise it will be recreated on every single render pass */\nconst StyledCompsPage = () => {\n    const history = useHistory();\n\n    return (\n        <Container>\n            <Wrapper>\n                <Title> My First Styled Component </Title>\n                <Button primary>Primary</Button>\n                <TomatoButton> TomatoButton </TomatoButton>\n                <Button primary as={ReversedButton}>\n                    Custom Button with Normal Button styles\n                </Button>\n                <Input defaultValue=\"@geelen\" type=\"text\" inputColor=\"blue\" />\n                <PswdInput />\n                <Button onClick={() => history.push('/theme')}>\n                    Go to Themed Page\n                </Button>\n                <NewPageBG>\n                    <Text>Themed Text inside a Themed Div</Text>\n                </NewPageBG>\n                <Text> This Text uses theme color </Text>\n            </Wrapper>\n        </Container>\n    );\n};\n\nexport default StyledCompsPage;\n","const returnCounter = (counter = 2, action) => {\n    switch (action.type) {\n        case 'INCREMENT': {\n            return counter + 1;\n        }\n        case 'DECREMENT': {\n            return counter - 1;\n        }\n        default:\n            return counter;\n    }\n};\n\nexport default returnCounter;\n","const todoList = (items = [], action) => {\n    const newItem = {\n        id: action.id,\n        text: action.text,\n        completed: false,\n    };\n    /* Dont insert anything if input not entered */\n    if (action.text === '') {\n        return [...items];\n    }\n\n    switch (action.type) {\n        case 'ADD_ITEM': {\n            return [...items, newItem];\n        }\n        case 'DELETE_ITEM': {\n            return items.filter((item) => item.id !== action.id);\n        }\n        case 'TOGGLE_ITEM': {\n            return items.map((item) => {\n                if (item.id !== action.id) {\n                    return item;\n                }\n                return { ...item, completed: !item.completed };\n            });\n        }\n        default: {\n            return items;\n        }\n    }\n};\n\nexport default todoList;\n","import { combineReducers } from 'redux';\nimport { createStore } from 'redux';\nimport returnCounter from './reducers/counter';\nimport todoList from './reducers/todolist';\n\nconst reducer = combineReducers({ returnCounter, todoList });\nconst ReduxStore = createStore(reducer);\n\nexport default ReduxStore;\n","import React, { useState } from 'react';\nimport ReduxStore from '../redux/redux-store';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport '../index.css';\n\nconst ReduxCounter = () => {\n    let inputVal;\n\n    const [count, setValue] = useState(ReduxStore.getState().returnCounter);\n    const [todoItems, setItemList] = useState(ReduxStore.getState().todoList);\n    const [filter, setFilter] = useState('SHOW_ALL');\n    const [itemID, setitemID] = useState(0);\n\n    /* To make sure that we get latest values of counter & todoList */\n    ReduxStore.subscribe(() => setValue(ReduxStore.getState().returnCounter));\n    ReduxStore.subscribe(() => setItemList(ReduxStore.getState().todoList));\n\n    const ToDoItem = ({ item }) => {\n        return (\n            <div className=\"listitem\">\n                <div\n                    className=\"itemText\"\n                    onClick={() =>\n                        ReduxStore.dispatch({\n                            type: 'TOGGLE_ITEM',\n                            id: item.id,\n                        })\n                    }\n                >\n                    {item.completed ? underlineText(item.text) : item.text}\n                </div>\n                <div className=\"itemRemove\">\n                    <CloseIcon\n                        onClick={() =>\n                            ReduxStore.dispatch({\n                                type: 'DELETE_ITEM',\n                                id: item.id,\n                            })\n                        }\n                    />\n                </div>\n            </div>\n        );\n    };\n\n    const FilterItem = ({ title, filterName }) => {\n        if (filterName === filter) {\n            return <span> {title} </span>;\n        }\n        return (\n            <div className=\"activeFilter\" onClick={() => setFilter(filterName)}>\n                {title}\n            </div>\n        );\n    };\n\n    const RenderList = () => {\n        let result = todoItems;\n\n        /* Get list based on the current filter, print a msg if no item present */\n        switch (filter) {\n            case 'SHOW_ALL': {\n                if (result.length > 0) {\n                    return <ItemList list={result} />;\n                }\n                return 'No Tasks Noted Down';\n            }\n            case 'ITEMS_COMPLETED': {\n                result = result.filter((item) => item.completed);\n                if (result.length > 0) {\n                    return <ItemList list={result} />;\n                }\n                return 'No Completed Tasks';\n            }\n            case 'ITEMS_PENDING': {\n                result = result.filter((item) => !item.completed);\n                if (result.length > 0) {\n                    return <ItemList list={result} />;\n                }\n                return 'No Pending Tasks';\n            }\n            default:\n                return 'No Tasks Noted Down';\n        }\n    };\n\n    const ItemList = ({ list }) => {\n        return (\n            <div>\n                <ul type=\"square\">\n                    {list.map((item) => (\n                        <li key={item.id}>\n                            <ToDoItem item={item} />\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        );\n    };\n\n    const underlineText = (text) => {\n        return <div className=\"text-striked\"> {text} </div>;\n    };\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <p> Redux Counter and To-Do List Example </p>\n            <p> Counter Value : {count} </p>\n            <Button\n                style={{ backgroundColor: '#21b6ae', color: 'yellow' }}\n                variant=\"contained\"\n                onClick={() => ReduxStore.dispatch({ type: 'INCREMENT' })}\n            >\n                Inc counter\n            </Button>\n            <Button\n                style={{ backgroundColor: '#21b6ae', color: 'yellow' }}\n                variant=\"contained\"\n                onClick={() => ReduxStore.dispatch({ type: 'DECREMENT' })}\n            >\n                Dec counter\n            </Button>\n            <div className=\"div_list\">\n                <p> To-Do List </p> <br />\n                <input\n                    ref={(node) => {\n                        inputVal = node;\n                    }}\n                    style={{ width: '200px', height: '25px' }}\n                ></input>\n                <Button\n                    onClick={() => {\n                        ReduxStore.dispatch({\n                            type: 'ADD_ITEM',\n                            text: inputVal.value,\n                            id: itemID,\n                        });\n                        setitemID(itemID + 1);\n                        inputVal.value = '';\n                    }}\n                    style={{\n                        backgroundColor: '#21b6ae',\n                        marginLeft: '10px',\n                        color: 'yellow',\n                    }}\n                >\n                    Add Item\n                </Button>\n                <div className=\"listOptions\">\n                    <div>\n                        <FilterItem filterName=\"SHOW_ALL\" title=\"All Items\" />\n                    </div>\n                    <div>\n                        <FilterItem\n                            filterName=\"ITEMS_PENDING\"\n                            title=\"Pending\"\n                        />\n                    </div>\n                    <div>\n                        <FilterItem\n                            filterName=\"ITEMS_COMPLETED\"\n                            title=\"Completed\"\n                        />\n                    </div>\n                </div>\n                <RenderList />\n            </div>\n        </div>\n    );\n};\n\nexport default ReduxCounter;\n","import React from 'react';\nimport { Redirect, Route, Switch, BrowserRouter } from 'react-router-dom';\n\nimport Homescreen from './pages/Homescreen';\nimport UIComponents from './pages/UIComponents';\nimport PageNotFound from './components/PageNotFound';\nimport Dashboard from './pages/Dashboard';\nimport StyledCompsPage from './pages/StyledCompsPage';\nimport ThemeCompsPage from './pages/ThemeCompsPage';\nimport ReduxCounter from './components/ReduxCounter';\n\nimport { AppThemeContext } from './context/AppThemeContext';\nimport './App.css';\n\nconst App = () => {\n    return (\n        <AppThemeContext>\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path=\"/\" component={Homescreen} />\n                    <Route path=\"/ui\" component={UIComponents} />\n                    <Route path=\"/dashboard\" component={Dashboard} />\n                    <Route path=\"/styled\" component={StyledCompsPage} />\n                    <Route path=\"/theme\" component={ThemeCompsPage} />\n                    <Route path=\"/redux\" component={ReduxCounter} />\n                    <Route path=\"/404\" component={PageNotFound} />\n                    <Redirect to=\"/404\" />\n                </Switch>\n            </BrowserRouter>\n        </AppThemeContext>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}